<?xml version="1.0" encoding="windows-1252"?>
<RefData version="1.0" exporter="EA.25">
	<DataSet name="Project Glossary" table="t_glossary" filter="Term='#Term#' and Type='#Type#'" stoplist=";GlossaryID;">
		<DataRow>
			<Column name="Term" value="Association"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A relationship between two or more entities. Implies a connection of some type - for example one entity uses the services of another, or one entity is connected to another over a network link."/>
			<Column name="GlossaryID" value="2"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Class"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A logical entity encapsulating data and behaviour. A class is a template for an object - the class is the design, the object the runtime instance."/>
			<Column name="GlossaryID" value="3"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Component Model"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="The component model provides a detailed view of the various hardware and software components that make up the proposed system. It shows both where these components reside and how they inter-relate with other components. Component requirements detail what responsibilities a component has to supply functionality or behavior within the system."/>
			<Column name="GlossaryID" value="4"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Customer"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A person or a company that requests An entity to transport goods on their behalf."/>
			<Column name="GlossaryID" value="5"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Operational Model"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A view of the proposed hardware that will make up the new system, together with the physical components that will execute on that hardware. Includes specifications for machine, operating system, network links, backup units &amp;etc."/>
			<Column name="GlossaryID" value="6"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Deployment Model"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A model of the system as it will be physically deployed"/>
			<Column name="GlossaryID" value="7"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Extends Relationship"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A relationship between two use cases in which one use case 'extends' the behavior of another. Typically this represents optional behavior in a use case scenario - for example a user may optionally request a list or report at some point in a performing a business use case. "/>
			<Column name="GlossaryID" value="8"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Includes Relationship"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A relationship between two use cases in which one use case 'includes' the behaviour. This is indicated where there a specific business use cases which are used from many other places - for example updating a train record may be part of many larger business processes."/>
			<Column name="GlossaryID" value="9"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Use Case"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value=" A Use Case represents a discrete unit of interaction between a user (human or machine) and the system. A Use Case is a single unit of meaningful work; for example creating a train, modifying a train and creating orders are all Use Cases.&#xA;Each Use Case has a description which describes the functionality that will be built in the proposed system. A Use Case may 'include' another Use Case's functionality or 'extend' another Use Case with its own behaviour.&#xA;Use Cases are typically related to 'actors'. An actor is a human or machine entity that interacts with the system to perform meaningful work."/>
			<Column name="GlossaryID" value="10"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="meta-model"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="An explicit model of the constructs and rules needed to build specific models within a domain of interest. A valid meta-model is an ontology, but not all ontologies are modeled explicitly as meta-models."/>
			<Column name="GlossaryID" value="11"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Ruleset"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="a collection of Rules"/>
			<Column name="GlossaryID" value="12"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Business logic"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Business logic is a non-technical term generally used to describe the functional algorithms which handle information exchange between a database and a user interface. &#xA;&#xA;Business logic comprises:&#xA;&#xA;    * business rules &#xA;and&#xA;    * workflows .&#xA;&#xA;&#xA;"/>
			<Column name="GlossaryID" value="13"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="business rules"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Business rules or business rulesets describe the operations, definitions and constraints that apply to an organization in achieving its goals.&#xA;&#xA;the difference with the --&gt; Business logic is the business context.&#xA;&#xA;INTERNAL DEFINITION&#xA;&quot;Classical&quot; Rules: Transforming / Modifying data on one single business object&#xA;&#xA;Process Rules: What processing steps need to be applied. Logic on more than one business object (see derivation, production  &amp; reaction rule, Workflow).&#xA;&#xA;Validation Rules: Does the data satisfy constraints (see integrity rule).&#xA;&#xA;those different type sof Business rules exists in the formal Logic (see below)."/>
			<Column name="GlossaryID" value="14"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="workflows "/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="workflows are the ordered tasks of passing documents or data from one participant (a person or a software system) to another."/>
			<Column name="GlossaryID" value="15"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="PSM"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A platform-specific model is a model of a software or business system that is linked to a specific technological platform (e.g. a specific programming language, operating system or database). Platform-specific models are indispensable for the actual implementation of a system.&#xA;Wikipedia"/>
			<Column name="GlossaryID" value="16"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="PIM"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A platform-independent model or PIM is a model of a software or business system that is independent of the specific technological platform used to implement it.&#xA;Wikipedia"/>
			<Column name="GlossaryID" value="17"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Open source"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A set of principles and practices on how to write software, the most important of which is that the source code is openly available.&#xA;[Wikipedia]&#xA;it does not imply any legal rights (positive or negative).&#xA;the right are defined by used license"/>
			<Column name="GlossaryID" value="18"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Creative Common Licenses"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Protects Concept, not implementation.&#xA;No official IBM position&#xA;"/>
			<Column name="GlossaryID" value="19"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Open Source Licences &amp; IBM"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="GPL: Not usable inside IBM&#xA;LGPL: Not modifiable code,  usable inside IBM&#xA;Eclipse:  usable inside IBM&#xA;Apache: usable inside IBM&#xA;&#xA;&#xA;"/>
			<Column name="GlossaryID" value="20"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Cartridge"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A collection of ready-to-go PSM, Rules and transformations to Code (M2T) that leverage a special technology.&#xA;e.g. the &quot;design model&quot; part of R4SC is a typical cartridge ."/>
			<Column name="GlossaryID" value="21"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="SOA"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="An &quot;IT Architectural Style&quot; that supports integrating businesses as a set of linked services (repeatable business tasks), providing business flexibility through the encapsulation of IT Assets, as loosely coupled services that can be reused, changed and combined in accordance to the business need."/>
			<Column name="GlossaryID" value="22"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="CBM"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Component Business Modeling (CBM) is the process of representing an enterprise as a collection of business components, where a business component is defined as a part of an enterprise that has the potential to operate independently - in the extreme as a separate company, or as part of another company."/>
			<Column name="GlossaryID" value="23"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="SOMA"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Service-oriented modeling and architecture (SOMA) is a method for modelling and supporting a structured approach for creating a Service Oriented Architecture (SOA). &#xA;Previously this method was supported by techniques like Object Oriented Analysis  (OOA ) and Object Oriented Design  (OOD ). SOMA has now taken us to the next level of abstraction. &#xA;SOMA is used to identify, specify, and implement services . It basically bridges the gapes between OOAD  and Component-based Development . (from Bluepedia)&#xA;"/>
			<Column name="GlossaryID" value="24"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Service"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="A service is repeatable business task -- for example, check customer credit, open new account.&#xA;&#xA;  For Release 2.0, the interface to R4SC defines this as affecting multiple BO"/>
			<Column name="GlossaryID" value="25"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Integrity Rules"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="It specialize into two kind of constraints: r2ml:AlethicIntegrityRule  and r2ml:DeonthicIntegrityRule &#xA;&#xA;Note: constraint must not contain any free variable."/>
			<Column name="GlossaryID" value="26"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Derivation Rules"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Any derivation rule consists from a condition part and a conclusion part.&#xA;In R2ML the conditions of a derivation rule arer2ml:qf.AndOrNafNegFormula.&#xA;Conclusions are restricted to quantifier-free disjunctive normal forms without NegationAsFailue. "/>
			<Column name="GlossaryID" value="27"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Production Rules"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Represents a production rule. Any production rule has a condition part a produced action expression part and an optional r2ml:postcondition "/>
			<Column name="GlossaryID" value="28"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Reaction Rules"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="The R2ML model of a reaction rule (ECA rule) consists in a rule triggering an event expression a condition part  a produced action expression part  and an optional r2ml:postcondition  Both action expression and postcondition have the same meaning as in ProductionRule."/>
			<Column name="GlossaryID" value="29"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="BOM"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Within Business Process Management all business objects, their attributes and their relations are defined in the business-object model (BOM). To describe the information processed by software modules, the semantics must be unified. That is called &quot;semantic integration&quot;. The business-object model is a result of semantic integration and is a representation of enterprise semantics. Besides BOM, there is also the use case model, for use within the software engineering of services.&#xA;Wikipedia"/>
			<Column name="GlossaryID" value="30"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="RSA"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Rational Software Architect"/>
			<Column name="GlossaryID" value="31"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="WBM"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Websphere Business Modelling"/>
			<Column name="GlossaryID" value="32"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="View"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="an ARC &quot;view&quot;is a special representation of a Model.&#xA;e.g.&#xA;In ARC 1.2 any RDF is a representation.&#xA;For ARC 2.0  arclet naming, a subset of the repository representing the information concerning a specific topic.  For example, an ARC work product like Call Dependency."/>
			<Column name="GlossaryID" value="33"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Repository"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="The logical place used to store information mapped to the ARC meta-model.  For Release 2.0 this is realized as Axioms and can be physically represented as a Data base or a collection of separate files."/>
			<Column name="GlossaryID" value="34"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Property"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="a Property is an entity that defines an attribute of an --&gt;Object. a Property usually consists of a name and a value. Its definition can be extended by a datatype, a representation format, a default value and restrictions."/>
			<Column name="GlossaryID" value="35"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Object"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Defines the abstract characteristics of a thing (object), including the thing's characteristics (its attributes, fields or properties) and the thing's behaviors (the things it can do, or methods, operations or features).&#xA;&#xA;An Object is composed by:&#xA;- An --&gt;Identity&#xA;- one (or more) --&gt;Atribute&#xA;- One (or more) --&gt;Behaviour"/>
			<Column name="GlossaryID" value="36"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Behaviour"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="An object's abilities to &quot;do&quot; some action."/>
			<Column name="GlossaryID" value="37"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Field"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Data that has several parts can be divided into fields (Wikipedia)&#xA;In this project, typical types of data with fields are data from screen I/O, data passed on external system interfaces, and data in one row of a database.&#xA;see also --&gt; Property."/>
			<Column name="GlossaryID" value="38"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="BOM (technical)"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Proprietary extension to XMI (using private, nonstandard namespaces) that is used by WebSphere Business Modeler to import and export process models."/>
			<Column name="GlossaryID" value="39"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Annotation"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Information added to the ARC repository as a performance optimization to avoid the cost of recomputing it when doing additional processing later.  If the computing effort were insignificant, this information could be regenerated from the unannotated inventory on each use."/>
			<Column name="GlossaryID" value="40"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Project Inventory"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="L2SOA work product consisting of a list of the system artifacts provided by the customer including source code, job control information like JCL, build scripts, documentation (architecture, design, specifications), etc.  "/>
			<Column name="GlossaryID" value="41"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Graph"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="From RDF.  A network of triples, where each triple is a relationship connecting two concepts (classes).   From mathematics, a graph is a set of objects called points, nodes, or vertices connected by links called lines or edges (wikipedia)."/>
			<Column name="GlossaryID" value="42"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Reports"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="Export of information of a view in a special format (HTML, SVG, DOC, etc.)"/>
			<Column name="GlossaryID" value="43"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Work Product"/>
			<Column name="Type" value="Business"/>
			<Column name="Meaning" value="GSMethod:  An input or output from a task in the method or engagement model.   The method allows the definition of custom work products for inputs or outputs that are not already defined in the method.&#xA;&#xA;For ARC, custom work products are fine grained inputs and outputs associated with the use cases and typically provided as views (see definition) in the repository.   Some work products are intermediate (temporary) and some are final.  Some reports (see definition) are used in creating standard method work products."/>
			<Column name="GlossaryID" value="44"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Artifact"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="A set of annotations created based on analysis of the information in the ARC repository."/>
			<Column name="GlossaryID" value="45"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Inventory"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Per L2SOA, the list of source files and documentation provided by the customer"/>
			<Column name="GlossaryID" value="46"/>
		</DataRow>
		<DataRow>
			<Column name="Term" value="Customer Project Inventory"/>
			<Column name="Type" value="Technical"/>
			<Column name="Meaning" value="Per L2SOA, the list of source files and documentation provided by the customer"/>
			<Column name="GlossaryID" value="47"/>
		</DataRow>
	</DataSet>
</RefData>
