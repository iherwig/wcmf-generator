/*
 * This file was generated by wCMFGenerator 3.0.0004 from ./model/cwm.uml on Thu Feb 12 11:45:23 CET 2009. 
 * Manual modifications should be placed inside the protected regions.
 *
 * Copyright (c) 2009 The Olympos Development Team.
 *
 * http://sourceforge.net/projects/olympos/
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 *  
 */
Ext.namespace("cwm");

cwm.ChiNode = function(modelNodeClass) {
	cwm.ChiNode.superclass.constructor.call(this, modelNodeClass);
}

Ext.extend(cwm.ChiNode, cwm.ChiNodeBase);

cwm.ChiNode.prototype.addProperty = function() {
	uwm.model.ModelContainer.getInstance().createModelObject("ChiValue", this);
}

cwm.ChiNode.prototype.addOperation = function() {
	uwm.model.ModelContainer.getInstance().createModelObject("Operation", this);
}

cwm.ChiNode.prototype.updateChildLabel = function(childModelNode, figure) {
	var graphics = figure.getGraphics();
	
	var childGraphics = this.getChildGraphicsByOid(graphics, childModelNode.getOid());
	if (childGraphics) {
		childGraphics.setLabel(childModelNode.getLabel());
	}
}

cwm.ChiNode.prototype.removeChild = function(childModelNode, figure) {
	var graphics = figure.getGraphics();
	
	var childGraphics = this.getChildGraphicsByOid(graphics, childModelNode.getOid());
	if (childGraphics) {
		graphics.removeChildElement(childGraphics, true);
	}
}

cwm.ChiNode.prototype.getChildGraphicsByOid = function(graphics, oid) {
	var result = null;
	
	var childGraphics = graphics.getChildElements();

	for (var i = 0; i < childGraphics.length; i++) {
		var currChildGraphics = childGraphics[i];
		
		if (currChildGraphics.getModelObject().getOid() == oid) {
			result = currChildGraphics;
			
			break;
		}
	}

	return result;
}