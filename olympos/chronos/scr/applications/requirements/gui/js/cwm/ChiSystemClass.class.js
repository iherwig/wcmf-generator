/*
 * Copyright (c) 2009 The Olympos Development Team.
 * 
 * http://sourceforge.net/projects/olympos/
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/*
 *  This file was generated by wCMFGenerator 3 from example-data/wcmf/requirements.uml on 2009-05-18 13:15. 
  Manual modifications should be placed inside the protected regions.
 * Copyright (c) 2009 The Olympos Development Team.
 */

Ext.namespace("cwm");

cwm.ChiSystemClass = function() {
	cwm.ChiSystemClass.superclass.constructor.call(this);
	
	this.uwmClassName = "ChiSystem";
	this.instanceClassName = "cwm.ChiSystem";
	this.treeIcon = "FigureChiSystem";
	this.figureIcon = "FigureChiSystem";
	this.figureClass = "uwm.graphics.figure.RectangleFigure";
	this.initialWidth = 50;
	this.initialHeight = 50;
	this.description = " a ChiSystem is a entity for the configuration of a specific technology. it is transformed in a section within a configuration file.";
	this.helpUrl = "help/index.html#ChiSystem|outline";
	this.defaultLabel = "New ChiSystem";
	this.semanticGroup = "configuration";
	this.labelProperties = {
		Name: true
	};

	this.gridTabIconClass = "ChiSystemTab";
	this.gridTabTip = "Shows all <b>ChiSystem</b> within selected scope";
	this.gridFields = [{
		name: "oid",
		mapping: "oid"
	}, {
		name: "Label",
		mapping: "Label"
	}];
	this.gridColumns = [{
		header: "Label",
		dataIndex: "Label",
		sortable: true
	}];
	
	this.connectionInfo = {
		"Property": {
			label: "Has Properties",
			invert: false,
			connectionType: "Composition",
			cardinality: -1
		},	
		
		"ChiValue": {
			label: "",
			invert: false,
			connectionType: 'composition',
			cardinality: -1
		}
	
	};
}

Ext.extend(cwm.ChiSystemClass, uwm.model.ClassObjectClass);

cwm.ChiSystemClass.prototype.getPropertyForm = function(modelNode, isLockedByOtherUser) {
	return new uwm.property.PropertyForm({
		items: [		new uwm.property.TextField({
			fieldLabel: 'config',
			toolTip: "this is the name of the file where the pairs value name &amp; initial value will be generated ",
			name: 'config',
			
			modelNode: modelNode,
			
			readOnly: isLockedByOtherUser		}) 
,		new uwm.property.TextField({
			fieldLabel: 'plattform',
			toolTip: "this is the target platform for this configuration item",
			name: 'plattform',
			
			modelNode: modelNode,
			
			readOnly: isLockedByOtherUser		}) 
,		new uwm.property.TextField({
			fieldLabel: 'Name',
			toolTip: "the name of this object.",
			name: 'Name',
			
			modelNode: modelNode,
			
			readOnly: isLockedByOtherUser		}) 
,		new uwm.property.TextField({
			fieldLabel: 'Alias',
			toolTip: "the Alias of this object.",
			name: 'Alias',
			
			modelNode: modelNode,
			
			readOnly: isLockedByOtherUser
		})
,		new uwm.property.HtmlEditor({
			fieldLabel: 'Notes',
			toolTip: "the actual description of the object.",
			name: 'Notes',
			
			modelNode: modelNode,
			
			readOnly: isLockedByOtherUser		}) 
, 		new uwm.property.ComboBox({
			fieldLabel: 'Author',
			toolTip: "This system's author's name and role in the project",
			name: 'Author',
			listType: "ChiAuthors",
			modelNode: modelNode,
			disabled : isLockedByOtherUser
		}), new uwm.property.ComboBox({
			fieldLabel: 'Status',
			toolTip: "state",
			name: 'Status',
			listType: "ChiStatus",
			modelNode: modelNode,
			disabled : isLockedByOtherUser
		})
		,		new uwm.property.TextField({
			fieldLabel: 'created',
			toolTip: "the creation date of this object",
			name: 'created',
			
			modelNode: modelNode,
			
			readOnly: true		}) 
,		new uwm.property.TextField({
			fieldLabel: 'creator',
			toolTip: "the user that created this object",
			name: 'creator',
			
			modelNode: modelNode,
			
			readOnly: true		}) 
,		new uwm.property.TextField({
			fieldLabel: 'last_editor',
			toolTip: "the last user that edited this object",
			name: 'last_editor',
			
			modelNode: modelNode,
			
			readOnly: true		}) 
,		new uwm.property.TextField({
			fieldLabel: 'modified',
			toolTip: "the date when this object was modified",
			name: 'modified',
			
			modelNode: modelNode,
			
			readOnly: true		}) 
]
	});
}

cwm.ChiSystemClass.prototype.getGraphics = function(label, figure) {
	return new uwm.graphics.figure.ClassFigure(label, figure);
}

cwm.ChiSystemClass.prototype.isOperationEnabled = function() {
	return false;
}

uwm.model.ModelNodeClassContainer.getInstance().registerClass(new cwm.ChiSystemClass());

	