<?php
/*
 * Copyright (c) 2009 The Olympos Development Team.
 *
 * http://sourceforge.net/projects/olympos/
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/**
 * This file was generated by wCMFGenerator 3.0.0017 from requirements.uml on Thu Aug 06 14:31:03 CEST 2009.
 * Manual modifications should be placed inside the protected regions.
 */
require_once(BASE."wcmf/lib/presentation/class.Controller.php");
// PROTECTED REGION ID(application/include/controller/class.CodeGeneratorListController.php/Import) ENABLED START
// PROTECTED REGION END

/**
 * @class CodeGeneratorListController
 * @ingroup Controller
 * @brief Reads out server.ini codeGenerators and referenced sections to return a list of available code generators.
 * <b>Input actions:</b> - @em generatorlist to list code generators
 * <b>Output actions:</b> - @em ok in every case
 * @param[in]
 * @param[out] list
 *
 * The following configuration settings are defined for this controller:
 *
 * [actionmapping]
 * ??generatorlist = CodeGeneratorListController
 *
 * [views]
 *
 * @author Niko
 * @version 1.0
 */
class CodeGeneratorListController extends Controller
{
	const INI_SECTION = 'codeGenerators';

	// PROTECTED REGION ID(application/include/controller/class.CodeGeneratorListController.php/Body) ENABLED START
	function hasView()
	{
		return false;
	}

	function executeKernel()
	{
		$result = array();

		$parser = InifileParser::getInstance();
		$logger = LoggerManager::getLogger('CodeGeneratorListController');
			
		if (($generatorIds = $parser->getSection(self::INI_SECTION)) !== false) {
			foreach($generatorIds as $generatorId => $generatorSection) {
				if (($generatorConfig = $parser->getSection($generatorSection)) !== false) {
					$result[] = $generatorConfig;
				} else {
					$logger->error($parser->getErrorMsg(), __FILE__, __LINE__);
				}
			}
		} else {
			$logger->error($parser->getErrorMsg(), __FILE__, __LINE__);
		}

		$this->_response->setValue('list', $result);

		//	Set the next action
		$this->_response->setAction('ok');

		//	Success
		return false;
	}

	// PROTECTED REGION END

}
