<?php
/*
 * Copyright (c) 2009 The Olympos Development Team.
 * 
 * http://sourceforge.net/projects/olympos/
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/**
 * This file was generated by wCMFGenerator 3.0.0018 from requirements.uml on Tue Jan 05 15:38:17 CET 2010. 
 * Manual modifications should be placed inside the protected regions.
 */
 require_once(BASE."wcmf/lib/presentation/class.Controller.php");
// PROTECTED REGION ID(application/include/controller/class.BrowserStatisticsController.php/Import) ENABLED START
 require_once(BASE."application/include/controller/class.AllBrowserStatisticsController.php");
 require_once (BASE.'wcmf/lib/util/class.SessionData.php');
// PROTECTED REGION END

/**
 * @class BrowserStatisticsController
 * @ingroup Controller
 * @brief @class BrowserStatisticsController
 * @ingroup Controller
 * @brief Returns CWB statistics data a previous run of AllBrowserStatisticsController. 
 * <b>Input actions:</b> - @em loadStatisticsOverview Returns CWB statistics data. 
 * <b>Output actions:</b> - @em failure If a fatal error occurs - @em ok In any other case 
 * @param[in] modelOid The OID of the model to generate statistical Data for. 
 * @param[out] statistics The statistics data from the current session. 
 * 
 * The following configuration settings are defined for this controller:
 *
 * [actionmapping]
 * ??loadStatisticsOverview = BrowserStatisticsController
 *
 * [views]
 * 
 * @author 
 * @version 1.0
 */
class BrowserStatisticsController extends Controller
{
// PROTECTED REGION ID(application/include/controller/class.BrowserStatisticsController.php/Body) ENABLED START
	public function executeKernel()
	{
		// get the working directory for the model
		$modelOid = $this->_request->getValue('modelOid');
		$workingDir = AllBrowserStatisticsController::getWorkingDir($modelOid);
		
		// load the generated data form the working directory
		// defines $statisticsData
		include($workingDir.'/statistics/browser.dat');
		
		Log::debug($statisticsData, __CLASS__);
		$this->_response->setValue('statistics', $statisticsData); 
	
		// success
		$this->_response->setAction('ok');

		return false;
	}

	public function hasView()
	{
		return false;
	}
// PROTECTED REGION END

}
?>
