import cwm;
import Chronos;
import uml;

extension org::openarchitectureware::uml2::profile::profiling;

extension common::umlutils;

uml::Class convert(cwm::ChiIssue i):
	let uc = new uml::Class : {
		uc.setName("ChiIssue:" + i.id)
	} ->
	uc
;

/*
//currently not used
Void establishConnections(cwm::ChiIssue i, uml::Model um):
	let uc = um.allOwnedElements().typeSelect(uml::Class).select(e|e.name == "ChiIssue:" + i.id).first(): {
		i.child.establishConnections(uc, um)
	}
;
*/

Void transferValues(cwm::ChiIssue i, uml::Model um):
	//(new uml::Class).setT
	let uc = um.allOwnedElements().typeSelect(uml::Class).select(e|e.name == "ChiIssue:" + i.id).first(): (
		let comment = new uml::Comment : (
			uc.applyStereotype("Chronos::ChiIssue") ->
			uc.setTaggedValue("Chronos::ChiIssue", "Author", i.author) ->
			uc.setTaggedValue("Chronos::ChiIssue", "Status", i.status) ->
			uc.setTaggedValue("Chronos::ChiIssue", "Responsible", i.responsible) ->
			uc.setTaggedValue("Chronos::ChiIssue", "Alias", i.alias) ->
			uc.setTaggedValue("Chronos::ChiIssue", "Version", i.version) ->
			uc.setName(i.name) ->
			i.notes != null ? (
				comment.setBody(i.notes) ->
				comment.annotatedElement.add(uc) ->
				uc.ownedComment.add(comment)
			) : Void ->
			uc.setTaggedValue("Chronos::ChiIssue", "created", i.created) ->
			uc.setTaggedValue("Chronos::ChiIssue", "creator", i.creator) ->
			uc.setTaggedValue("Chronos::ChiIssue", "last_editor", i.lastEditor) ->
			uc.setTaggedValue("Chronos::ChiIssue", "modified", i.modified)
		)
	)
;

cwm::ChiIssue convertToCwm(Chronos::ChiIssue c) :
	let un = new cwm::ChiIssue : (
		un.setId(c.getId()) ->
		un.setAuthor(c.getTaggedValue("Chronos::ChiIssue", "Author").toString()) ->
		un.setStatus(c.getTaggedValue("Chronos::ChiIssue", "Status").toString()) ->
		un.setResponsible(c.getTaggedValue("Chronos::ChiIssue", "Responsible").toString()) ->
		un.setAlias(c.getTaggedValue("Chronos::ChiIssue", "Alias").toString()) ->
		un.setVersion(c.getTaggedValue("Chronos::ChiIssue", "Version").toString()) ->
		un.setName(c.name) ->
		un.setNotes(c.getComment()) ->
		un.setCreated(c.getTaggedValue("Chronos::ChiIssue", "created").toString()) ->
		un.setCreator(c.getTaggedValue("Chronos::ChiIssue", "creator").toString()) ->
		un.setLastEditor(c.getTaggedValue("Chronos::ChiIssue", "last_editor").toString()) ->
		un.setModified(c.getTaggedValue("Chronos::ChiIssue", "modified").toString())
	) ->
	un
;
