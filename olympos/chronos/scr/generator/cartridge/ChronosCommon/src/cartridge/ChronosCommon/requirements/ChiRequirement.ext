import uml;
import Chronos;

List[Chronos::ChiFeature] getFeatures(Chronos::ChiRequirement this):
	this.getRelationships().typeSelect(uml::Realization).client.typeSelect(Chronos::ChiFeature)
;

List[Chronos::ChiIssue] getIssues(Chronos::ChiRequirement this):
	this.getRelationships().typeSelect(uml::Dependency).client.typeSelect(Chronos::ChiIssue)
;

List[Chronos::ChiRequirement] getChildRequirements(Chronos::ChiRequirement this):
	this.getAssociations().memberEnd.select(e|e.type == this && e.aggregation == uml::AggregationKind::composite).getOtherEnd().type.typeSelect(Chronos::ChiRequirement)
;

List[Chronos::ChiBase] getParents(Chronos::ChiRequirement this):
	this.getAssociations().memberEnd.select(e|e.type == this).getOtherEnd().type
		.select(f|f.getAppliedStereotypes().first().name == "ChiRequirement" || f.getAppliedStereotypes().first().name == "ChiGoal")
;

