import uml;
import Chronos;

extension cartridge::ChronosCommon::domain::ChiNode;

/**
 * Get the referenced parent/child for a reference (or null if it is not connected to the values class')
 */
cached uml::Property getReferencedProperty(ChiValueRef this): 
	let referencedNode = this.getModel().allOwnedElements().typeSelect(ChiNode).select(e|e.name == this.reference_type).first() :
		let node = this.getModel().allOwnedElements().typeSelect(ChiNode).select(e|e == this.class).first() :
			let parent = node.getParentNodesRecursive().select(e|e.type == referencedNode).first() :
				parent != null ? parent : node.getChildNodesRecursive().select(e|e.type == referencedNode).first()
;
/**
 * Get the referenced value for a reference (or null if it is not connected to the values class')
 */
cached ChiNode getReferencedNode(ChiValueRef this): 
	let referencedProperty = this.getReferencedProperty() :
		referencedProperty != null ? referencedProperty.type : null
;
/**
 * Get the referenced value for a reference (or null if it is not connected to the values class')
 */
cached ChiValue getReferencedValue(ChiValueRef this): 
	let referencedNode = this.getReferencedNode() :
		referencedNode != null ? referencedNode.getChiValuesRecursive().select(e|e.name == this.reference_value).first() :
			null
;

