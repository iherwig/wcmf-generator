<?xml version="1.0" encoding="UTF-8"?>
<workflow>

	<!-- the following properties property maybe overriden from the command line -->
	<property name='generatorVersion' value='3'/>
	<property name='basePath' value='src'/>
	<property name='propertyFile' value='${basePath}/cartridge/Chi/workflow/chi.properties'/>
	<property file="${propertyFile}"/>
	
	<bean class="oaw.uml2.Setup" standardUML2Setup="true"/>
	
	<!-- Metamodel-Definition -->
	<bean id="EmfMM" class="oaw.type.emf.EmfMetaModel">
		<metaModelPackage value="org.eclipse.emf.ecore.EcorePackage"/>
	</bean>
	<bean id="UmlMM" class="oaw.uml2.UML2MetaModel"/>
	<bean id="${profilename}MM" class="oaw.uml2.profile.ProfileMetaModel">
		<profile value="${profileUmlFile}"/>
	</bean>

	<!-- Backup -->
	<if cond="${doBackup}">
		<component class="com.wemove.wcmf.generator.workflow.BackupComponent">
			<sourcePath value="${targetDir}/${applicationPackage}"/>
			<targetPath value="${backupDir}"/>
		</component>
	</if>

	<!-- Read the UML model and store it into a slot named 'model' -->
	<component class="oaw.emf.XmiReader">
		<modelFile value="${modelUmlFile}"/>
		<outputSlot value="model"/>
	</component>

	<!-- read profile as model -->
	<component class='net.sourceforge.olympos.oaw.workflow.XmiUrlReader'>
		<modelUrl value='${profileUmlFile}'/>
		<outputSlot value="chronosProfileModel"/>
	</component>
	<!--component class="oaw.emf.XmiReader">
		<modelFile value="${profileUmlFile}" />
		<outputSlot value="chronosProfileModel" />
	</component-->

	<!-- normalize names -->
	<component class="oaw.xtend.XtendComponent">
		<metaModel idRef="${profilename}MM"/>
		<metaModel idRef="UmlMM" />
		<invoke value="common/nameNormalizer::normalizeNameWithoutPackage(model)" />
	</component>

	<!-- Check constraints before model 2 model transformation -->
	<if cond="${doCheck}">
		<component class="oaw.check.CheckComponent">
		
			<!-- Global variables used by the check -->
			<globalVarDef name="RootPackage" value="'${rootPackage}'"/>
			<globalVarDef name="LibraryPackage" value="'${libraryPackage}'"/>
			<globalVarDef name="RequiredControllerSuperClass" value="'${requiredControllerSuperclass}'"/>
			<globalVarDef name="RequiredNodeSuperClass" value="'${requiredNodeSuperclass}'"/>

			<metaModel idRef="EmfMM"/>
			<metaModel idRef="UmlMM"/>
			<metaModel idRef="${profilename}MM"/>
			<checkFile value="${preCheckFile}"/>
			<emfAllChildrenSlot value="model"/>
			<abortOnError value="true"/>
		</component>
	</if>

	<!-- Prepare the model for Chronos and store it into a slot named 'transformedModel' -->
	<component id="m2m" class="oaw.xtend.XtendComponent">

		<!-- Global variables used by the transformation -->
		<globalVarDef name="ModelFile" value="'${modelUmlFile}'"/>
		<globalVarDef name="ProfileFile" value="'${profileUmlFile}'"/>
		<globalVarDef name="RootPackage" value="'${rootPackage}'"/>
		<globalVarDef name="LibraryPackage" value="'${libraryPackage}'"/>
		<globalVarDef name="ApplicationPackage" value="'${applicationPackage}'"/>
		<globalVarDef name="RequiredNodeSuperClass" value="'${requiredNodeSuperclass}'"/>

		<metaModel idRef="EmfMM"/>
		<metaModel idRef="UmlMM"/>
		<metaModel idRef="${profilename}MM"/>
		<invoke value="cartridge::ChiCmf::extensions::m2m::addDefaults(model, chronosProfileModel)"/>

		<outputSlot value="transformedModel"/>
	</component>
		
	<component id="renameProperties" class="oaw.xtend.XtendComponent">

		<!-- Global variables used by the transformation -->
		<globalVarDef name="ModelFile" value="'${modelUmlFile}'"/>
		<globalVarDef name="ProfileFile" value="'${profileUmlFile}'"/>
		<globalVarDef name="RootPackage" value="'${rootPackage}'"/>
		<globalVarDef name="LibraryPackage" value="'${libraryPackage}'"/>
		<globalVarDef name="ApplicationPackage" value="'${applicationPackage}'"/>
		<globalVarDef name="RequiredNodeSuperClass" value="'${requiredNodeSuperclass}'"/>

		<metaModel idRef="EmfMM"/>
		<metaModel idRef="UmlMM"/>
		<metaModel idRef="${profilename}MM"/>
		<invoke value="cartridge::ChiCmf::extensions::m2m::renameProperties(transformedModel)"/>
	</component>

	<!-- Check constraints after model 2 model transformation -->
	<if cond="${doCheck}">
		<component class="oaw.check.CheckComponent">
		
			<!-- Global variables used by the check -->
			<globalVarDef name="RootPackage" value="'${rootPackage}'"/>
			<globalVarDef name="LibraryPackage" value="'${libraryPackage}'"/>
			<globalVarDef name="RequiredControllerSuperClass" value="'${requiredControllerSuperclass}'"/>
			<globalVarDef name="RequiredNodeSuperClass" value="'${requiredNodeSuperclass}'"/>

			<metaModel idRef="EmfMM"/>
			<metaModel idRef="UmlMM"/>
			<metaModel idRef="${profilename}MM"/>
			<checkFile value="${postCheckFile}"/>
			<emfAllChildrenSlot value="model"/>
			<abortOnError value="true"/>
		</component>
	</if>

	<!-- Write out transformed model for manual cross-check -->
	<!--
	<component id="UML2Writer" class="org.openarchitectureware.uml2.UML2Writer">
		<inputSlot value="transformedModel" />
		<outPath value="${transformedModelUmlFile}" />
	</component>
	-->

	<!-- Install the Cwe framework -->
	<component class="net.sourceforge.olympos.oaw.workflow.Unzip">
		<zipFile value="${frameworkFileCwe}"/>
		<targetPath value="${targetDirCwe}/.."/>
	</component>

	<component class="net.sourceforge.olympos.oaw.workflow.AntRunner">
		<Param name="folderName" value="${targetDir}/cwe/js/cwe"/>
		<Param name="fileName" value="Config.js"/>
		<Param name="url" value="${dionysosURL}"/>
		<antFile value="${basePath}/cartridge/Chi/workflow/build.xml"/>
	</component>

	<!-- Expand the model into the Cwe templates -->
	<component id="generator" class="oaw.xpand2.Generator" skipOnErrors="true">
		<fileEncoding value="utf-8"/>
		
		<!-- Global variables used by the generator -->
		<globalVarDef name="GeneratorVersion" value="'${generatorVersion}'"/>
		<globalVarDef name="ModelFile" value="'${modelUmlFile}'"/>
		<globalVarDef name="RootPackage" value="'${rootPackage}'"/>
		<globalVarDef name="LibraryPackage" value="'${libraryPackage}'"/>
		<globalVarDef name="ApplicationPackage" value="'${applicationPackage}'"/>
		<globalVarDef name="DefaultConfigFile" value="'${configFileDefault}'"/>
		<globalVarDef name="ProjectName" value="'${projectname}'"/>
		<globalVarDef name="TargetDirectory" value="'${targetDir}'"/>
		<globalVarDef name="HeaderText" value="${headerText}"/>
		<globalVarDef name="RequiredNodeSuperClass" value="'${requiredNodeSuperclass}'"/>

		<metaModel idRef="EmfMM"/>
		<metaModel idRef="UmlMM"/>
		<metaModel idRef="${profilename}MM"/>
		
		<expand value="${expandCwe} FOR transformedModel"/>

		<beautifier class="net.sourceforge.olympos.oaw.workflow.BlankLineRemover">
			<acceptedBlankLines value="1" />
		</beautifier>
		
		<outlet path="${targetDirCwe}">
		</outlet>
		
		<!-- Protected regions configuration -->
		<prSrcPaths value="${targetDirCwe}"/>	
		<prDefaultExcludes value="false"/>
		<prExcludes value="*.svn-base"/>
	</component>

</workflow>