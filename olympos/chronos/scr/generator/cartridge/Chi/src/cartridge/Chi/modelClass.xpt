«IMPORT uml»
«IMPORT Chronos»

«EXTENSION common::util»
«EXTENSION common::umlutils»
«EXTENSION common::naming»

«EXTENSION cartridge::ChronosCommon::domain::ChiNode»
«EXTENSION cartridge::ChronosCommon::domain::ChiValue»

«EXTENSION cartridge::ChiCmf::extensions::umlutils»
«EXTENSION cartridge::ChiCmf::extensions::util»
«EXTENSION cartridge::ChiCmf::extensions::globals»

«EXTENSION cartridge::Chi::util»

«DEFINE root FOR uml::Model»
	«EXPAND modelClass FOREACH this.getModelClasses()»
«ENDDEFINE»

«DEFINE modelClass FOR Chronos::ChiNode»
	«info("Creating class " + this.name)-»
	«FILE "js/" + this.getChiFullPackageName().asPath() + "/" + this.name + ".class.js"-»
«HeaderText()-»
Ext.namespace("«this.getChiFullPackageName()»");

/**
 * @class «this.name»
 * «this.name» description: «this.getComment("\n * ")»
 *
 * @constructor
 */
«this.getChiFullPackageName()».«this.name» = function(oid, data) {
«PROTECT CSTART "// " CEND "" ID (this.getChiFullPackageName().asPath()+"/"+this.name+"class.js/Constructor").asProtectedRegionId()»
«ENDPROTECT»
	var modelDescription = chi.model.ModelDescriptionContainer.getInstance().getDescription('«this.name»');
	return «this.getChiFullPackageName()».«this.name».superclass.constructor.call(this, modelDescription, oid, data);
};
Ext.extend(«this.getChiFullPackageName()».«this.name», chi.model.ModelRecord);

«PROTECT CSTART "// " CEND "" ID (this.getChiFullPackageName().asPath()+"/"+this.name+"class.js/Body").asProtectedRegionId()»
«ENDPROTECT»

/**
 * Returns the label of this record.
 * 
 * @return The label of this record.
 * @type String
 */
«this.getChiFullPackageName()».«this.name».prototype.getLabel = function() {
	var label = this.get("«this.display_value.replaceAll('\\|', '") + " - " + this.get("')»");
	if (label == undefined || label.length == 0) {
		label = this.getOid(); 
	}
«PROTECT CSTART "// " CEND "" ID (this.getChiFullPackageName().asPath()+"/"+this.name+"class.js/getLabel").asProtectedRegionId()»
«ENDPROTECT»
	return label;
};
	«ENDFILE»
«ENDDEFINE»
