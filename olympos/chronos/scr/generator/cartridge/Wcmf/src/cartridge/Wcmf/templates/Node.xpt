«IMPORT uml»
«IMPORT Chronos»

«EXTENSION common::util»
«EXTENSION common::umlutils»
«EXTENSION common::naming»

«EXTENSION cartridge::ChronosCommon::naming»
«EXTENSION cartridge::Wcmf::extensions::globals»
«EXTENSION cartridge::Wcmf::extensions::umlutils»
«EXTENSION cartridge::Wcmf::extensions::util»

«EXTENSION cartridge::ChronosCommon::domain::ChiNode»
«EXTENSION cartridge::ChronosCommon::domain::ChiValue»
«EXTENSION cartridge::ChronosCommon::domain::ChiValueRef»
«EXTENSION cartridge::ChronosCommon::domain::ChiManyToMany»

«REM» template expands the node files ----------------------------«ENDREM»
«DEFINE file FOR ChiNode-»
  «FILE this.getFullPackageName().asPath()+"/"+this.name.asPhpClassFile()-»
<?php
«HeaderText()-»
/**
 * This file was generated by ChronosGenerator«IF !GeneratorVersion().isNullOrEmpty()» «GeneratorVersion()»«ENDIF» from «ModelFile()»«IF PrintGenerateDate()» on «Date()»«ENDIF».
 * Manual modifications should be placed inside the protected regions.
 */
namespace «this.getFullPackageName().asPhpPackage()»;

«IF !this.isAbstract-»
use «this.getFullPackageName().asPhpPackage()»\_base\«this.name.asBaseClass()»;
«ELSEIF this.hasSuperClass()-»
use «this.getSuperClass().getFullPackageName().asPhpPackage()»\«this.getSuperClass().name»;
«ENDIF-»
«PROTECT CSTART "// " CEND "" ID (this.getFullPackageName().asPath()+"/"+this.name.asPhpClassFile()+"/Import").asProtectedRegionId()»
«ENDPROTECT»

/**
 * «IF !this.getComment("\n * ").isNullOrEmpty()»«this.getComment("\n * ")»«ELSE»«this.name»«ENDIF»
 *
«EXPAND attributes FOR this-»
 */
«IF this.isAbstract»abstract «ENDIF»class «this.name»«IF !this.isAbstract» extends «this.name.asBaseClass()»«ELSEIF this.hasSuperClass()» extends «this.getSuperClass().name»«ENDIF» {
«PROTECT CSTART "// " CEND "" ID (this.getFullPackageName().asPath()+"/"+this.name.asPhpClassFile()+"/Body").asProtectedRegionId()»
«ENDPROTECT»
«EXPAND operation(this) FOREACH this.getOperations()-»
}
«ENDFILE-»
«ENDDEFINE»

«REM» operation --------------------------------------------------«ENDREM»
«DEFINE operation(Chronos::ChiNode class) FOR uml::Operation-»
  /**
   * «IF !this.getComment("\n   * ").isNullOrEmpty()»«this.getComment("\n   * ")»«ELSE»«class.name»::«this.name»«ENDIF»
  «FOREACH this.ownedParameter.select(e|e.direction.toString().matches(".*in.*")) AS p-»
   * @param «p.name» «p.getComment("")»
  «ENDFOREACH-»
   * @return
   */
  «this.visibility» function «this.name»(«FOREACH this.ownedParameter.select(e|e.direction.toString().matches(".*in.*")) AS p SEPARATOR ", "»$«p.name»«ENDFOREACH») {
«PROTECT CSTART "// " CEND "" ID (class.getFullPackageName().asPath()+"/"+ class.name.asPhpClassFile()+"/Methods/"+this.name).asProtectedRegionId()»
«ENDPROTECT»
  }
«ENDDEFINE»

«REM» attributes ---------------------------------------------------«ENDREM»
«DEFINE attributes FOR ChiNode-»
  «FOREACH this.getChiValuesRecursive() AS curValue-»
 * @var «curValue.name» «IF !curValue.type.name.isNullOrEmpty() || !curValue.defaultValue.stringValue().isNullOrEmpty()»(«curValue.type.name»«IF !curValue.defaultValue.stringValue().isNullOrEmpty()», default: «curValue.defaultValue.quoteValue(curValue.type, "'")»«ENDIF»)«ENDIF»
  «ENDFOREACH-»
  «FOREACH this.getChiValueRefs() AS curReference-»
 * @ref «curReference.name» («curReference.getReferencedNode().name».«curReference.getReferencedValue().name»)
  «ENDFOREACH-»
  «FOREACH this.getChildNodesRecursive() AS curChild ITERATOR Index1-»
    «IF !((ChiNode)curChild.type).isAbstract-»
      «IF curChild.type.metaType.toString().contains("ChiManyToMany") && curChild.type.getOtherEndAllowSourceType(curChild.getOtherEnd(), false).size == 1-»
        «LET curChild.type.getOtherEndAllowSourceType(curChild.getOtherEnd(), false).first() AS otherNmEnd-»
 * @rel «otherNmEnd.getRoleName()» («otherNmEnd.type.getFullPackageName().asPackageName()».«otherNmEnd.type.name», n:m)
        «ENDLET-»
      «ELSE-»
 * @rel «curChild.getRoleName()» («curChild.type.getFullPackageName().asPackageName()».«curChild.type.name», 1:n)
      «ENDIF-»
    «ENDIF-»
  «ENDFOREACH-»
  «FOREACH this.getParentNodesRecursive() AS curParent ITERATOR Index1-»
    «IF !((ChiNode)curParent.type).isAbstract-»
 * @rel «curParent.getRoleName()» («curParent.type.getFullPackageName().asPackageName()».«curParent.type.name», n:1)
    «ENDIF-»
  «ENDFOREACH-»
«ENDDEFINE»
