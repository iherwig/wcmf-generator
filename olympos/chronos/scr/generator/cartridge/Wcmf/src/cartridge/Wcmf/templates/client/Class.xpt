«IMPORT uml»
«IMPORT Chronos»

«EXTENSION common::util»
«EXTENSION common::umlutils»
«EXTENSION common::naming»

«EXTENSION cartridge::ChronosCommon::naming»
«EXTENSION cartridge::Wcmf::extensions::globals»
«EXTENSION cartridge::Wcmf::extensions::umlutils»
«EXTENSION cartridge::Wcmf::extensions::util»

«EXTENSION cartridge::ChronosCommon::domain::ChiNode»
«EXTENSION cartridge::ChronosCommon::domain::ChiValue»
«EXTENSION cartridge::ChronosCommon::domain::ChiValueRef»
«EXTENSION cartridge::ChronosCommon::domain::ChiManyToMany»

«REM» This template expands the js client files ------------------«ENDREM»

«DEFINE file FOR ChiNode»
  «FILE ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js"-»
«HeaderText()»
/**
 * This file was generated by ChronosGenerator «GeneratorVersion()» from «ModelFile()» on «Date()».
 * Manual modifications should be placed inside the protected regions.
 */
define([
    "dojo/_base/declare",
    "app/model/meta/Node"
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Define").asProtectedRegionId()»
«ENDPROTECT»
], function(
    declare,
    Node
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Params").asProtectedRegionId()»
«ENDPROTECT»
) {
    var «this.name» = declare([Node
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Declare").asProtectedRegionId()»
«ENDPROTECT»
    ], {
        typeName: '«this.getFullPackageName().asPhpPackage().replaceAll("\\\\", "\\\\\\\\")»\\«this.name»',
        isSortable: «IF getOrderByName() == defaultOrderByName()-»true«ELSE-»false«ENDIF-»,
        displayValues: [
«FOREACH this.display_value.split("\\|") AS curValue SEPARATOR ", "-»
            "«curValue»"
«ENDFOREACH-»
        ],

«LET this.getChiValuesRecursive() AS values-»
«LET this.getChiValueRefs() AS references-»
        attributes: [«IF values.size > 0 || references.size > 0-»{«ENDIF-»
«FOREACH values AS curValue SEPARATOR "        }, {"»
            name: "«curValue.name»",
            type: "«curValue.type.name»",
            isEditable: «curValue.is_editable.boolString()»,
            inputType: '«curValue.input_type»',
            regexp: '«curValue.restrictions_match»',
            regexpDesc: '«curValue.restrictions_description»',
            tags: ['«curValue.app_data_type»'],
            isReference: false
«ENDFOREACH-»«IF values.size > 0 && references.size > 0-»        }, {«ENDIF-»
«FOREACH references AS curReference SEPARATOR "        }, {"»
            name: "«curReference.name»",
            type: "«curReference.getReferencedNode().name»",
            attribute: "«curReference.getReferencedValue().name»",
            isReference: true
«ENDFOREACH-»«IF values.size > 0 || references.size > 0-»        }«ENDIF-»],
«ENDLET-»
«ENDLET-»

«LET this.getChildNodesRecursive().select(e|!((Chronos::ChiNode) e.type).isAbstract).select(e|e.isNavigable()) AS children-»
«LET this.getParentNodesRecursive().select(e|!((Chronos::ChiNode) e.type).isAbstract).select(e|e.isNavigable()) AS parents-»
        relations: [«IF children.size > 0 || parents.size > 0-»{«ENDIF-»
«FOREACH children AS curChild SEPARATOR "        }, {"»
  «IF curChild.type.metaType.toString().contains("ChiManyToMany") && curChild.type.getOtherEnd(this, false).size == 1-»
    «LET curChild.type.getOtherEnd(this, false).first() AS otherNmEnd-»
            name: "«otherNmEnd.getRoleName()»",
            type: "«otherNmEnd.type.name»",
            aggregrationKind: "«otherNmEnd.aggregation»",
    «ENDLET-»
  «ELSE-»
            name: "«curChild.getRoleName()»",
            type: "«curChild.type.name»",
            aggregrationKind: "«curChild.aggregation»",
  «ENDIF-»
            maxMultiplicity: "«IF curChild.getUpper() == -1»unbounded«ELSE»«curChild.getUpper()»«ENDIF-»",
            thisEndName: "«curChild.getOtherEnd().getRoleName()»",
            relationType: "child"
«ENDFOREACH-»«IF children.size > 0 && parents.size > 0-»        }, {«ENDIF-»
«FOREACH parents AS curParent SEPARATOR "    }, {"»
            name: "«curParent.getRoleName()»",
            type: "«curParent.type.name»",
            aggregrationKind: "«curParent.aggregation»",
            maxMultiplicity: "«IF curParent.getUpper() == -1»unbounded«ELSE»«curParent.getUpper()»«ENDIF-»",
            thisEndName: "«curParent.getOtherEnd().getRoleName()»",
            relationType: "parent"
«ENDFOREACH-»«IF children.size > 0 || parents.size > 0-»        }«ENDIF-»]
«ENDLET-»
«ENDLET-»

«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Body").asProtectedRegionId()»
«ENDPROTECT»
    });
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Static").asProtectedRegionId()»
«ENDPROTECT»
    return «this.name»;
});
  «ENDFILE»
«ENDDEFINE»