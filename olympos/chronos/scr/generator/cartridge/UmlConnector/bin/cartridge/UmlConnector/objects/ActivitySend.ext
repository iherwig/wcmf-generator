import cwm;
import Chronos;
import uml;

extension org::openarchitectureware::uml2::profile::profiling;

extension common::umlutils;

extension cartridge::UmlConnector::connections;
extension cartridge::UmlConnector::connectionsToCwm;

uml::SendSignalAction convert(cwm::ActivitySend a):
	let uc = new uml::SendSignalAction: (
		uc.setName("ActivitySend:" + a.id)
	) ->
	uc
;

Void establishConnections(cwm::ActivitySend b, uml::Model um):
	let uc = um.allOwnedElements().typeSelect(uml::SendSignalAction).select(e|e.name == "ActivitySend:" + b.id).first(): (
		b.manyToMany.select(e|e.targetRole == "ARControlFlowTarget").establishConnectionsToAcceptEventAction(uc, um, null, uml::AggregationKind::none, uml::AggregationKind::none, false, true)
	)
;

Void transferValues(cwm::ActivitySend c, uml::Model um):
	//(new uml::Class).setT
	let uc = um.allOwnedElements().typeSelect(uml::SendSignalAction).select(e|e.name == "ActivitySend:" + c.id).first(): (
		let comment = new uml::Comment : (
			uc.setName(c.name) ->
			c.notes != null ? (
				comment.setBody(c.notes) ->
				comment.annotatedElement.add(uc) ->
				uc.ownedComment.add(comment)
			) : Void
	/*
			uc.applyStereotype("Chronos::ActivitySend") ->
			uc.setTaggedValue("Chronos::ActivitySend", "Author", c.author) ->
			uc.setTaggedValue("Chronos::ActivitySend", "Status", c.status) ->
			uc.setTaggedValue("Chronos::ActivitySend", "Alias", c.alias) ->
			uc.setTaggedValue("Chronos::ActivitySend", "Version", c.version) ->
	
			uc.setTaggedValue("Chronos::ActivitySend", "created", c.created) ->
			uc.setTaggedValue("Chronos::ActivitySend", "creator", c.creator) ->
			uc.setTaggedValue("Chronos::ActivitySend", "last_editor", c.lastEditor) ->
			uc.setTaggedValue("Chronos::ActivitySend", "modified", c.modified)
	*/
		)
	)
;

cwm::ActivitySend convertToCwm(uml::SendSignalAction c) :
	let un = new cwm::ActivitySend : (
		un.setId(c.getId()) ->
		un.setName(c.name) ->
		un.setNotes(c.getComment()) ->
/*
		un.setAuthor(c.getTaggedValue("Chronos::ActivitySend", "Author").toString()) ->
		un.setStatus(c.getTaggedValue("Chronos::ActivitySend", "Status").toString()) ->
		un.setAlias(c.getTaggedValue("Chronos::ActivitySend", "Alias").toString()) ->
		un.setVersion(c.getTaggedValue("Chronos::ActivitySend", "Version").toString()) ->

		un.setCreated(c.getTaggedValue("Chronos::ActivitySend", "created").toString()) ->
		un.setCreator(c.getTaggedValue("Chronos::ActivitySend", "creator").toString()) ->
		un.setLastEditor(c.getTaggedValue("Chronos::ActivitySend", "last_editor").toString()) ->
		un.setModified(c.getTaggedValue("Chronos::ActivitySend", "modified").toString())
*/

		un.child.addAll(c.outgoing.target.typeSelect(uml::AcceptEventAction).convertToChild())
	) ->
	un
;
