import uml;
import xmlSchema;

extension org::openarchitectureware::xsd::lib::qname;

extension common::cimUml;

extension cartridge::XmlSchema::domainClass;
extension cartridge::XmlSchema::domainEnum;
extension cartridge::XmlSchema::domainSimple;

xmlSchema::SchemaType xmlSchema(uml::Model this, String rootElements, String targetNamespace):
	//(new xmlSchema::SchemaType).a
	//(new xmlSchema::TopLevelAttribute).setN

	let xsd = new xmlSchema::SchemaType:
	let rootElementList = rootElements.split(","):

	xsd.setTargetNamespace(targetNamespace) ->
	
	xsd.complexType.addAll(this.allOwnedElements().typeSelect(uml::Class).removeCommonClasses().convertToXsd(targetNamespace, rootElementList)) ->
	xsd.simpleType.addAll(this.allOwnedElements().typeSelect(uml::Enumeration).convertToXsd(targetNamespace)) ->
	xsd.simpleType.addAll(this.allOwnedElements().typeSelect(uml::PrimitiveType).select(e|e.name.matches("[a-zA-Z0-9-]+")).convertToXsd(targetNamespace)) ->
	
	xsd.element.addAll(rootElementList.getRootElement(targetNamespace)) ->
		
	xsd
;

xmlSchema::TopLevelElement getRootElement(String rootClassName, String targetNamespace):
	let e = new xmlSchema::TopLevelElement:
	
	e.setName(rootClassName) ->
	e.setType(createQName(targetNamespace, rootClassName)) ->
	
	e
;
