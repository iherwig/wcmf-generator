import uml;
import xmlSchema;
import jaxb;

extension org::openarchitectureware::xsd::lib::qname;

extension common::util;
extension common::cimUml;

extension cartridge::XmlSchema::domainClass;
extension cartridge::XmlSchema::domainEnum;
extension cartridge::XmlSchema::domainSimple;

xmlSchema::XmlSchemaDocumentRoot xmlSchema(uml::Model this, String rootElements, String targetNamespace):
	let targetRoot = new xmlSchema::XmlSchemaDocumentRoot:
	
	//targetRoot.xMLNSPrefixMap.put("jaxb", "http://java.sun.com/xml/ns/jaxb") ->
	//targetRoot.xSISchemaLocation.put("http://java.sun.com/xml/ns/jaxb", "/home/nist/eclipse-3.5-workspace/generator/core/src/metamodel/jaxb.xsd") ->
	targetRoot.setSchema(createSchema(this, rootElements, targetNamespace)) ->
		
	targetRoot
;

create xmlSchema::SchemaType createSchema(uml::Model umlModel, String rootElements, String targetNamespace):
	let rootElementList = rootElements.split(","):

	this.setTargetNamespace(targetNamespace) ->
	
	this.complexType.addAll(umlModel.allOwnedElements().typeSelect(uml::Class).removeCommonClasses().select(e|!e.name.isNullOrEmpty() && !e.isAbstract).convertToXsd(targetNamespace, rootElementList)) ->
	this.simpleType.addAll(umlModel.allOwnedElements().typeSelect(uml::Enumeration).convertToXsd(targetNamespace)) ->
	this.simpleType.addAll(umlModel.allOwnedElements().typeSelect(uml::PrimitiveType).select(e|e.name.matches("[a-zA-Z0-9-]+")).convertToXsd(targetNamespace)) ->
	
	rootElements.trim().length > 0 && rootElementList.size > 0 ? (
		this.element.addAll(rootElementList.getRootElement(targetNamespace))
	) : (
		Void
	)
;

xmlSchema::TopLevelElement getRootElement(String rootClassName, String targetNamespace):
	let e = new xmlSchema::TopLevelElement:
	
	e.setName(rootClassName) ->
	e.setType(createQName(targetNamespace, rootClassName)) ->
	
	e
;

jaxb::JaxbDocumentRoot jaxb(uml::Model this, String rootElements, String targetNamespace):
	let targetRoot = new jaxb::JaxbDocumentRoot:
	let root = new jaxb::BindingsType:
	let schema = new jaxb::BindingsType:
	
	targetRoot.xMLNSPrefixMap.put("xs", "http://www.w3.org/2001/XMLSchema") ->
	
	root.setVersion("2.0") ->
	targetRoot.setBindings(root) ->
	
	schema.setSchemaLocation("schema.xsd") ->
	root.bindings.add(schema) ->
	
	schema.bindings.addAll(this.allOwnedElements().typeSelect(uml::Enumeration).ownedLiteral.convertToJaxb(targetNamespace)) ->
	
	targetRoot
;