//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.08.09 at 03:08:38 PM MESZ 
//


package com.ibm.eenergy.common.usecases.sendreadings;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PhaseConfigurationKind.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PhaseConfigurationKind">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="other"/>
 *     &lt;enumeration value="onePhaseTwoWire"/>
 *     &lt;enumeration value="onePhaseThreeWire"/>
 *     &lt;enumeration value="twoPhaseTwoWire"/>
 *     &lt;enumeration value="twoPhaseThreeWire"/>
 *     &lt;enumeration value="threePhaseTwoWire"/>
 *     &lt;enumeration value="threePhaseThreeWire"/>
 *     &lt;enumeration value="threePhaseFourWire"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PhaseConfigurationKind")
@XmlEnum
public enum PhaseConfigurationKind {

    @XmlEnumValue("other")
    OTHER("other"),
    @XmlEnumValue("onePhaseTwoWire")
    ONE_PHASE_TWO_WIRE("onePhaseTwoWire"),
    @XmlEnumValue("onePhaseThreeWire")
    ONE_PHASE_THREE_WIRE("onePhaseThreeWire"),
    @XmlEnumValue("twoPhaseTwoWire")
    TWO_PHASE_TWO_WIRE("twoPhaseTwoWire"),
    @XmlEnumValue("twoPhaseThreeWire")
    TWO_PHASE_THREE_WIRE("twoPhaseThreeWire"),
    @XmlEnumValue("threePhaseTwoWire")
    THREE_PHASE_TWO_WIRE("threePhaseTwoWire"),
    @XmlEnumValue("threePhaseThreeWire")
    THREE_PHASE_THREE_WIRE("threePhaseThreeWire"),
    @XmlEnumValue("threePhaseFourWire")
    THREE_PHASE_FOUR_WIRE("threePhaseFourWire");
    private final String value;

    PhaseConfigurationKind(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PhaseConfigurationKind fromValue(String v) {
        for (PhaseConfigurationKind c: PhaseConfigurationKind.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
