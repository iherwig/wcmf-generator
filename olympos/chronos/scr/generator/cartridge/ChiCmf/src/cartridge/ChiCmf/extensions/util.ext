import uml;
import Chronos;

extension org::openarchitectureware::uml2::profile::profiling;
extension org::openarchitectureware::util::stdlib::io;

extension common::util;
extension common::umlutils;

extension cartridge::ChiCmf::extensions::naming;
extension cartridge::ChiCmf::extensions::globals;

/**
 * Chronos Stereotypes
 */
String STEREOTYPE_CHI_NODE() : "Chronos::ChiNode";
//Not used
//String STEREOTYPE_CHI_VALUE() : "Chronos::ChiValue";
//TODO: Which Type?
String STEREOTYPE_CHI_ASSOCIATION() : "Chronos::ChiAssociation";

/**
 * Check if a given class belongs to the chronos library
 */
boolean isLibraryClass(uml::NamedElement this) : 
	LibraryPackageAbsolute(this.getModel()) != this.getModel().name ?
		this.getQualifiedName().startsWith(LibraryPackageAbsolute(this.getModel()))
	:
		false
;

/**
 * Check if a given class belongs to the application
 */
boolean isApplicationClass(uml::NamedElement this) : 
	ApplicationPackageAbsolute(this.getModel()) != this.getModel().name ?
		this.getQualifiedName().startsWith(ApplicationPackageAbsolute(this.getModel())) && uml::Class.isInstance(this)
	:
		uml::Class.isInstance(this)
;

/**
 * Check if an element is added by the generator
 */
boolean isGeneratorAdded(uml::Element this) : 
	JAVA net.sourceforge.olympos.oaw.extend.Generator.isGeneratorAdded(org.eclipse.uml2.uml.Element)
;

/**
 * Check if an element is inherited by the generator
 */
boolean isGeneratorInherited(uml::Element this) : 
	JAVA net.sourceforge.olympos.oaw.extend.Generator.isGeneratorInherited(org.eclipse.uml2.uml.Element)
;

/**
 * Check if an element is added by the generator
 */
boolean isNode(uml::Element this) : 
	this.getAppliedStereotype(STEREOTYPE_CHI_NODE()) != null || this.getAppliedStereotype(STEREOTYPE_CHI_MANY_TO_MANY()) != null
;

Boolean isManyToMany(uml::Class this):
	this.getAppliedStereotype(STEREOTYPE_CHI_MANY_TO_MANY()) != null
;

/**
 * Configuration related methods
 */
 
/**
 * Check if a model contains a application configuration
 */
boolean hasSystemConfig(uml::Model this) :
	this.allOwnedElements().typeSelect(ChiSystem).size > 0
;
/**
 * Get all configuration file names that are referenced in the model
 */
Set[String] getConfigurationFiles(uml::Model this) :
	let fromKeys = this.allOwnedElements().typeSelect(ChiActionKey).config :
		let fromSystem = this.allOwnedElements().typeSelect(ChiSystem).config :
			fromKeys.addAll(fromSystem).toSet()
;
/**
 * Check if a configuation file is the default one
 */
boolean isDefaultConfig(String config) : config == DefaultConfigFile();

/**
 * Get the primary key tagged value or default pk name if not set
 */
String getPKName(ChiManyToMany this) : 
	this.pk_name == null || this.pk_name.length == 0 ? defaultPKName(this) : this.pk_name
;
