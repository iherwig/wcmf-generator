import Chronos;
import Ouranos;
import uml;

extension common::util;
extension common::umlutils;

extension cartridge::ChronosCheck::usecases::ChiBusinessUseCase;
extension cartridge::ChronosCommon::usecases::ChiBusinessUseCase;

context Chronos::ChiBusinessUseCase WARNING
	"ChiBusinessUseCase should have a Scope: " + this.fullQualifiedName():
	this.hasScope()
;

context Chronos::ChiBusinessUseCase WARNING
	"ChiBusinessUseCase should have a GoalInContext: " + this.fullQualifiedName():
	this.hasGoalInContext()
;

context Chronos::ChiBusinessUseCase if this.getInitial() != null WARNING
	"ActivityIntial must have the same name as the “trigger” field in the corresponding use case: " + this.getInitial().fullQualifiedName():
	this.hasTriggerEqInitial()
;

context Chronos::ChiBusinessUseCase if this.getFinals().size > 0 WARNING
	"At least one ActivityFinal must have the same name as the “main success scenario” field in the corresponding use case: " + this.fullQualifiedName():
	this.hasMainSuccessScenarioEqFinal()
;

context Chronos::ChiBusinessUseCase if !this.PrimaryActor.isNullOrEmpty() WARNING
	"A ChiBusinessPartnerPassive Cannot be a primary actor: " + this.getPrimaryActor().fullQualifiedName():
	this.isPrimaryActorActive()
;

context Chronos::ChiBusinessUseCase WARNING
	"A ChiBusinessUseCase SHOULD have an ActivitySet: " + this.fullQualifiedName():
	this.hasActivitySet()
;

context Chronos::ChiBusinessUseCase WARNING
	"A ChiBusinessUseCase SHOULD have an Actor: " + this.fullQualifiedName():
	this.hasActor()
;

context Chronos::ChiBusinessUseCase ERROR
	"ChiBusinessUseCase MUST have a Trigger: " + this.fullQualifiedName():
	this.hasTrigger()
;

context Chronos::ChiBusinessUseCase ERROR
	"ChiBusinessUseCase MUST have a MainSuccessScenario: " + this.fullQualifiedName():
	this.hasMainSuccessScenario()
;

context Chronos::ChiBusinessUseCase ERROR
	"ChiBusinessUseCase MUST have a PrimaryActor: " + this.fullQualifiedName():
	this.hasPrimaryActor()
;
