import uml;
import Chronos;

extension cartridge::ChronosCommon::usecases::ActivityNode;
extension cartridge::ChronosCommon::usecases::DataStoreNode;

boolean hasName(uml::DataStoreNode this):
	this.isNameNotEmpty()
;

boolean hasIncoming(uml::DataStoreNode this):
	!this.isOutputChiObject() ? (
		this.incoming.size >= 1
	) : (
		true
	)
;

boolean hasOutgoing(uml::DataStoreNode this):
	!this.isOutputChiObject() ? ( 
		this.outgoing.size >= 1
	) : (
		true
	)
;

boolean requestHasOutgoing(uml::DataStoreNode this):
	this.isInputChiObject() ? (
		this.outgoing.size >= 1
	) : (
		true
	)
;

boolean responseHasIncoming(uml::DataStoreNode this):
	this.isOutputChiObject() ? (
		this.incoming.size >= 1
	) : (
		true
	)
;

boolean responseSameNode(uml::DataStoreNode this):
	this.activity.node.typeSelect(uml::DataStoreNode).select(e|e.isOutputChiObject()).forAll(e|e.type == this.type)
;

boolean hasNode(uml::DataStoreNode this):
	this.type != null
;

boolean sameNameSameNode(uml::DataStoreNode this):
	this.activity.node.typeSelect(uml::DataStoreNode).select(e|e.name == this.name).forAll(e|e.type == this.type)
;
