«IMPORT uml»
«IMPORT Chronos»

«IMPORT org::openarchitectureware::meta::uml::classifier»
«IMPORT org::openarchitectureware::meta::uml::interface»

«EXTENSION common::util»
«EXTENSION common::umlutils»

«EXTENSION cartridge::ChiCmf::extensions::globals»
«EXTENSION cartridge::ChiCmf::extensions::naming»
«EXTENSION cartridge::ChiCmf::extensions::umlutils»
«EXTENSION cartridge::ChiCmf::extensions::util»

«EXTENSION cartridge::ChiCmf::extensions::ChiNode»

«REM»This template expands the create view for a JS file with the extjs library
Author: Giuseppe Platania
Version: 0.8 «ENDREM»

«REM» This template expands the class files for the Chronos Web Modeler«ENDREM»
«DEFINE file FOR ChiNode»
	«FOREACH this.getRoleNames() AS curRoleName»
		«FILE "gui/js/cwm/"+curRoleName.asJSClassFile()-»
«HeaderText()»
/*
 *  This file was generated by ChronosGenerator «GeneratorVersion()» from «ModelFile()» on «Date()». 
  Manual modifications should be placed inside the protected regions.
 * Copyright (c) 2009 The Olympos Development Team.
 */

Ext.namespace("cwm");

cwm.«curRoleName»Class = function() {
	cwm.«curRoleName»Class.superclass.constructor.call(this);
	
	this.uwmClassName = "«curRoleName»";
	this.instanceClassName = "cwm.«curRoleName»";
	this.treeIcon = "Figure«curRoleName»";
	this.figureIcon = "Figure«curRoleName»";
	this.figureClass = "uwm.graphics.figure.RectangleFigure";
	this.description = " «this.getComment().replaceAll("\\n", "\\\\n")»";
	this.helpUrl = "help/index.html#«curRoleName»|outline";
	this.defaultLabel = "New «curRoleName»";
	this.semanticGroup = "«this.getNearestPackage().name»";
	this.labelProperties = {
		Name: true
	};

	this.gridTabIconClass = "«curRoleName»Tab";
	this.gridTabTip = "Shows all <b>«curRoleName»</b> within selected scope";
	this.gridFields = [{
		name: "oid",
		mapping: "oid"
	}, {
		name: "label",
		mapping: "label"
	}];
	this.gridColumns = [{
		header: "Label",
		dataIndex: "Label",
		sortable: true
	}];
	
	this.connectionInfo = {
			«EXPAND parentRelationships FOR this»
			«IF this.getParentNodesRecursive().select(e|e.visibility.toString()=='public' && e.getRoleName() != "Package" && e.getRoleName() != "Figure").size != 0 &&
				this.getChildNodesRecursive().select(e|e.visibility.toString()=='public' && e.getRoleName() != "Package" && e.getRoleName() != "Figure").size != 0», «ENDIF -»
			«EXPAND childrenRelationships FOR this-»
	};
}

Ext.extend(cwm.«curRoleName»Class, uwm.model.ModelClass);

cwm.«curRoleName»Class.prototype.getPropertyForm = function(modelNode, isLockedByOtherUser) {
	return new uwm.property.PropertyForm({
		items: [«EXPAND inputtype FOR this -»]
	});
}

cwm.«curRoleName»Class.prototype.getGraphics = function(label, figure) {
	return new uwm.graphics.figure.ImageFigure(label, figure, "../application/images/«curRoleName».PNG", 96, 95, 96, 95);
}

uwm.model.ModelNodeClassContainer.getInstance().registerClass(new cwm.«curRoleName»Class());

	«ENDFILE»
	«ENDFOREACH»
«ENDDEFINE»

			
«DEFINE parentRelationships FOR ChiNode -»
«FOREACH this.getParentNodesRecursive().select(e|e.visibility.toString()=='public' && e.getRoleName() != "Package" && e.getRoleName() != "Figure")  AS curParent SEPARATOR ','-»
			"«curParent.getRoleName()»": {
			label: "«curParent.association.name»",
			invert: true,
			connectionType: "«curParent.association.getTaggedValue("Chronos::ChiAssociation", "fk_name")»"
		}
«ENDFOREACH-»
«ENDDEFINE»	

«DEFINE childrenRelationships FOR ChiNode»
«FOREACH this.getChildNodesRecursive().select(e|e.visibility.toString()=='public' && e.getRoleName() != "Package" && e.getRoleName() != "Figure") AS curChild SEPARATOR ','-»
	«IF curChild.getModel().allOwnedElements().typeSelect(uml::Class).selectFirst(e|e.name == curChild.getRoleName()).getAppliedStereotype(STEREOTYPE_CHI_MANY_TO_MANY()) == null»
		«EXPAND childRelationship FOR curChild»
	«ELSE»
		«LET curChild.getModel().allOwnedElements().typeSelect(uml::Class).selectFirst(e|e.name == curChild.getRoleName()).getParentNodes().selectFirst(e|e.getRoleName().compareTo(this.name) != 0) AS indirectChild»
			«EXPAND childRelationship FOR indirectChild»
		«ENDLET»
	«ENDIF»
«ENDFOREACH-»
«ENDDEFINE»	

«DEFINE childRelationship FOR uml::Property»
		"«this.getRoleName()»": {
			label: "«this.association.name»",
			invert: false,
			connectionType: "«this.association.getTaggedValue("Chronos::ChiAssociation", "fk_name")»"
		}
«ENDDEFINE»
»

«REM»Input types«ENDREM»

«REM» valueDisplayNames -------------------------------file,
fileex, 
 filebrowser,
linkbrowser,«ENDREM»
«DEFINE inputtype FOR ChiNode -»
«FOREACH this.getChiValuesRecursive().select(e|e.app_data_type != "DATATYPE_IGNORE") AS curValue SEPARATOR ','-»
		new uwm.property.«curValue.input_type.split('#').first().getExtJsInputType()»({
			fieldLabel: '«curValue.name»',
			toolTip: "«curValue.getComment()»",
			name: '«curValue.name»',
			«IF curValue.input_type.split('#').first().getExtJsInputType() == "ComboBox"»listType: "«curValue.input_type.split(':').last()»",«ENDIF»
			modelNode: modelNode,
			«IF curValue.input_type.split('#').first().getExtJsInputType() == "ComboBox"»disabled: isLockedByOtherUser«ELSE»
			«IF curValue.is_editable.boolString()=='false'»readOnly: true«ELSE»readOnly: isLockedByOtherUser«ENDIF»«ENDIF -»
		}) 
«ENDFOREACH -»
«ENDDEFINE»



«DEFINE DateField FOR ChiValue»
«ENDDEFINE»

«DEFINE StaticComboBox FOR ChiValue»
«ENDDEFINE»
