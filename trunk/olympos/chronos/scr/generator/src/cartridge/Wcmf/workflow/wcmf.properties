# wCMF Generator properties

# Enterprise Architect import
# The following properties are used for importing eap files as input for the generator.
# These files will be converted to uml2 files (the standard input format of the generator)

# Profile conversion using EA_Xmi2Exporter
doProfileEaExport = false
profileEaFile = ${basePath}/metamodel/wcmf_profile.eap
profilePkg = Views/profile/wcmf

# Model conversion using EA_Xmi2Exporter
doModelEaExport = true
modelEaFile = example-data/wcmf/wcmf_default_ea.eap
modelPkg = Views/wcmf_default
applyPkg = wcmf_default


# Profile configuration
# The following properties define the modelling profile.
profilename = wcmf
profileUmlFile = ${basePath}/metamodel/wcmf.profile.uml


# Input configuration
# The following properties define the project specific input model.
# libraryPackage and applicationPackage are supposed to be direct children of rootPackage
modelUmlFile = example-data/wcmf/wcmf_default.uml
rootPackage = wcmf_default
libraryPackage = wcmf
applicationPackage = application


# Check configuration
# The following properties configure the generator checks. preCheckFile is run before model
# to model transformation and postCheckFile is run afterwards
doCheck = true
preCheckFile = cartridge::Wcmf::checks::pre
postCheckFile = cartridge::Wcmf::checks::post
requiredControllerSuperclass = Model::wcmf_default::wcmf::lib::presentation::Controller
requiredNodeSuperclass = Model::wcmf_default::wcmf::lib::model::Node


# Backup configuration
# The following properties configure the backup.
doBackup = true
backupDir = backup


# Generator configuration
# The following properties configure the code generation from the input model.
frameworkFile = wcmf/wCMF.zip
expand = cartridge::Wcmf::templates::Root::root
configFileDefault = config.ini
projectname = wCMF Default
targetDir = target
