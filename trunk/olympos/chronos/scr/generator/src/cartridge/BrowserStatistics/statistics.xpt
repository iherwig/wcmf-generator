«IMPORT uml»
«IMPORT Chronos»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»

«EXTENSION cartridge::BrowserStatistics::statistics»

«DEFINE file FOR uml::Model»
«FILE "browser.dat"»
[
	«EXPAND rowTemplate("allGoals", "Goals", -1) FOR this.getAllGoals()», 
	«EXPAND rowTemplate("achievedGoals", "&nbsp;&nbsp;Achieved Goals", (E() + this.getAchievedGoals().size) / this.getAllGoals().size) FOR this.getAchievedGoals()»,
	«EXPAND rowTemplate("nonAchievedGoals", "&nbsp;&nbsp;Non Achieved Goals", (E() + this.getAchievedGoals().size) / this.getAllGoals().size) FOR this.getNonAchievedGoals()»,
	«EXPAND rowTemplate("nonAchievedGoalsWithoutRequirement", "&nbsp;&nbsp;&nbsp;&nbsp;Without Requirement", 1 - ((E() + this.getNonAchievedGoalsWithoutRequirement().size) / this.getNonAchievedGoals().size)) FOR this.getNonAchievedGoalsWithoutRequirement()»,
	«EXPAND rowTemplate("nonAchievedGoalsWithoutValidPriority", "&nbsp;&nbsp;&nbsp;&nbsp;Without valid Priority", 1 - ((E() + this.getNonAchievedGoalsWithoutValidPriority().size) / this.getNonAchievedGoals().size)) FOR this.getNonAchievedGoalsWithoutValidPriority()»,

	«EXPAND rowTemplate("allRequirements", "Requirements", -1) FOR this.getAllRequirements()»,
	«EXPAND rowTemplate("requirementsWithoutParent", "&nbsp;&nbsp;Without Parent", 1 - ((E() + this.getRequirementsWithoutParent().size) / this.getAllRequirements().size)) FOR this.getRequirementsWithoutParent()»,

	«EXPAND rowTemplate("allFeatures", "Features", -1) FOR this.getAllFeatures()»,
	«EXPAND rowTemplate("featuresWithoutParent", "&nbsp;&nbsp;Without Parent", 1 - ((E() + this.getFeaturesWithoutParent().size) / this.getAllFeatures().size)) FOR this.getFeaturesWithoutParent()»,

	«EXPAND rowTemplate("allIssues", "Issues", -1) FOR this.getAllIssues()»,
	«EXPAND rowTemplate("issuesWithoutParent", "&nbsp;&nbsp;Without Parent", 1 - ((E() + this.getIssuesWithoutParent().size) / this.getAllIssues().size)) FOR this.getIssuesWithoutParent()»,

	«EXPAND rowTemplate("allBusinessUseCases", "Business Use Cases", -1) FOR this.getAllBusinessUseCases()»,
	«EXPAND rowTemplate("businessUseCasesWithoutActor", "&nbsp;&nbsp;Without Actor", 1 - ((E() + this.getBusinessUseCasesWithoutActor().size) / this.getAllBusinessUseCases().size)) FOR this.getBusinessUseCasesWithoutActor()»
]
«ENDFILE»
«ENDDEFINE»

«DEFINE rowTemplate(String id, String text, Real status) FOR List[Chronos::ChiBase]»
	{
		"id": "«id»",
		"objectList": [
			«FOREACH this AS currElem SEPARATOR ","»
				"«currElem.getAppliedStereotypes().first().name»::«currElem.Alias»"
			«ENDFOREACH»
		],
		"object": "«text»",
		"quantity": «this.size»,
		"status": «calculateTrafficLight(status)»
	}
«ENDDEFINE»