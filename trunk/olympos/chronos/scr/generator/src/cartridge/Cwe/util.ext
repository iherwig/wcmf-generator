import uml;
import Chronos;

extension org::openarchitectureware::uml2::profile::profiling;

extension common::util;

extension cartridge::ChiCmf::extensions::globals;
extension cartridge::ChiCmf::extensions::util;
extension cartridge::ChiCmf::extensions::umlutils;
extension cartridge::ChiCmf::extensions::naming;
extension cartridge::ChiCmf::extensions::ChiNode;

List[Chronos::ChiNode] getModelClasses(uml::Package this):
	this.allOwnedElements().typeSelect(Chronos::ChiNode).
		select(
			e|e.isApplicationClass() &&
			e.getQualifiedName() != RequiredNodeSuperClass() &&
			!e.isAbstract &&
			!e.isManyToMany()
		)
;

List[uml::Package] getModelPackages(uml::Model this):
	this.allOwnedElements().typeSelect(uml::Package).selectFirst(e|e.getQualifiedName().startsWith(ApplicationPackageAbsolute(this))).getModelPackages({})
;

List[uml::Package] getModelPackages(uml::Package this, List[uml::Package] list):
	this.getQualifiedName() != ApplicationPackageAbsolute(this.getModel())
	&& this.getModelClasses().size > 0
	?
		list.add(this)
	 :
	 	Void
	->
	this.ownedElement.typeSelect(uml::Package).getModelPackages(list) ->
	list
;

String getFileName(uml::Package this):
	"application/" + this.getFullPackageName().asPath() + "/" + this.name.toFirstUpper() + "_package.class.js"
;

String getCwePackageName(uml::Package this):
	"application." + this.getFullPackageName() + "." + this.name.toFirstUpper() + "_package"
;

List[Chronos::ChiValue] getChiAttributes(Chronos::ChiNode this):
	this.getChiValuesRecursive().select(e|!e.isGeneratorAdded() || e.isGeneratorInherited())
;

String sanitizeJsString(String input):
	input.replaceAll("\\\"", "\\\\\"").replaceAll("\\n", "\\\\n")
;

/**
 * Control specific functions
 */
String getComboBoxConfig(String inputType):
	let listType = inputType.split(':').first().split('#').last():
		let listDef = inputType.split(':').last():
			listType == "fix" ?
				"data: [[\"" + listDef.replaceAll('\\[', '","').replaceAll('\\]', '"').replaceAll('\\|', '],["') + "]]"
			:
				"targetCweModelElementId: \"" + listDef + "\""
;
String getComboBoxClass(String inputType):
	let listType = inputType.split(':').first().split('#').last():
	listType == "fix" ? "StaticComboBox" : "ComboBox"
;
