
/**
* this file actually don't do nothing useful. But future operations should be placed here. 
*
 * metamodel import
 */
import uml;
import Chronos;

extension org::openarchitectureware::uml2::profile::profiling;
extension org::openarchitectureware::util::stdlib::io;

extension common::util;
extension common::umlutils;

extension cartridge::projectplan::extensions::globals;

List[Chronos::ChiRequirement] getTechnicals(uml::Model this):
	this.allOwnedElements().typeSelect(Chronos::ChiRequirement).select(e|e.Type == TECHNICAL_TYPE())
;

List[Chronos::ChiRequirement] getEnvironmentals(uml::Model this):
	this.allOwnedElements().typeSelect(Chronos::ChiRequirement).select(e|e.Type == ENVIRONMENTAL_TYPE())
;

String getComplexity(uml::UseCase this):
	let value = this.getComplexityValue():
	
	value == 5 ?
		"simple"
	: (
		value == 10 ?
			"average"
		:
			"complex"
	)
;

int getComplexityValue(uml::UseCase this):
	let count = this.allOwnedElements().typeSelect(uml::Action).size:
	
	count <= ACTION_COUNT_SIMPLE() ?
		5
	: (
		count <= ACTION_COUNT_AVERAGE() ?
			10
		:
			15
	)
;
