import uml;
import Chronos;

extension cartridge::ChronosCommon::usecases::ActivityNode;

boolean hasName(uml::OpaqueAction this):
	this.isNameNotEmpty()
;

boolean hasIncomingOutgoing(uml::OpaqueAction this):
	this.incoming.size >= 1 && this.outgoing.size >= 1
;

boolean hasUniqueName(uml::OpaqueAction this):
	this.isNameUniqueWithinActivity()
;

boolean hasLeOneProductionRuleset(uml::OpaqueAction this):
	this.isAtMostOneProductionRuleset()
;

boolean isProductionRulesetConsecutive(uml::OpaqueAction this):
	this.getProductionRuleset().getRelationships().typeSelect(uml::Realization).source.containsAll(this.getConsecutiveWithSameProductionRuleset())
;
