«IMPORT uml»
«IMPORT Chronos»

«EXTENSION common::util»
«EXTENSION common::umlutils»
«EXTENSION common::naming»

«EXTENSION cartridge::ChronosCommon::naming»
«EXTENSION cartridge::ChronosCommon::util»

«EXTENSION cartridge::Wcmf::extensions::globals»
«EXTENSION cartridge::Wcmf::extensions::umlutils»
«EXTENSION cartridge::Wcmf::extensions::util»

«EXTENSION cartridge::ChronosCommon::domain::ChiNode»
«EXTENSION cartridge::ChronosCommon::domain::ChiValue»
«EXTENSION cartridge::ChronosCommon::domain::ChiValueRef»
«EXTENSION cartridge::ChronosCommon::domain::ChiManyToMany»

«REM» This template expands the js client files ------------------«ENDREM»

«DEFINE file FOR ChiNode»
  «FILE ApplicationPath().asPath()+"/public/js/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js"-»
«HeaderText()-»
/**
 * This file was generated by ChronosGenerator«IF !GeneratorVersion().isNullOrEmpty()» «GeneratorVersion()»«ENDIF» from «ModelFile()»«IF PrintGenerateDate()» on «Date()»«ENDIF».
 * Manual modifications should be placed inside the protected regions.
 */
define([
    "dojo/_base/declare",
    "app/js/model/meta/Node"
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Define").asProtectedRegionId()»
«ENDPROTECT»
], function(
    declare,
    Node
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Params").asProtectedRegionId()»
«ENDPROTECT»
) {
    var «this.name» = declare([Node
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Declare").asProtectedRegionId()»
«ENDPROTECT»
    ], {
        typeName: "«this.getFullPackageName().asPackageName()».«this.name»",
        description: "«this.getComment(" ").replaceAll('\\"', '\\\\"')»",
        isSortable: «IF getOrderByName() == defaultOrderByName()-»true«ELSE-»false«ENDIF-»,
        displayValues: [«FOREACH this.display_value.taggedValueAsList() AS curValue SEPARATOR ", "-»"«curValue»"«ENDFOREACH-»],
        pkNames: [«FOREACH this.getPKValues() AS curPk SEPARATOR ', '-»"«curPk.name»"«ENDFOREACH-»],
        relationOrder: [«FOREACH this.child_order.taggedValueAsList() AS curRelation SEPARATOR ", "-»"«curRelation»"«ENDFOREACH-»],

«LET this.getChiValuesRecursive() AS values-»
«LET this.getChiValueRefs() AS references-»
        attributes: [«IF values.size > 0 || references.size > 0-»{«ENDIF-»
«FOREACH values AS curValue SEPARATOR "        }, {"»
            name: "«curValue.name»",
            type: "«curValue.type.name»",
            description: "«curValue.getComment(" ").replaceAll('\\"', '\\\\"')»",
            isEditable: «curValue.is_editable.boolString()»,
            inputType: "«curValue.input_type.replaceAll('\\"', '\\\\"')»",
            displayType: "«curValue.display_type»",
            validateType: "«curValue.restrictions_match.replaceAll('\\"', '\\\\"')»",
            validateDesc: "«curValue.restrictions_description.replaceAll('\\"', '\\\\"')»",
            tags: [«FOREACH curValue.app_data_type.taggedValueAsList() AS curTag SEPARATOR ", "-»"«curTag»"«ENDFOREACH-»],
            defaultValue: «IF curValue.defaultValue.stringValue().isNullOrEmpty()»null«ELSE»«curValue.defaultValue.quoteValue(curValue.type, "'")»«ENDIF»,
            isReference: false
«ENDFOREACH-»«IF values.size > 0 && references.size > 0-»        }, {«ENDIF-»
«FOREACH references AS curReference SEPARATOR "        }, {"»
            name: "«curReference.name»",
            type: "«curReference.getReferencedNode().name»",
            attribute: "«curReference.getReferencedValue().name»",
            isReference: true
«ENDFOREACH-»«IF values.size > 0 || references.size > 0-»        }«ENDIF-»],
«ENDLET-»
«ENDLET-»

«LET this.getChildNodesRecursive().select(e|!((Chronos::ChiNode) e.type).isAbstract).select(e|e.isNavigable()) AS children-»
«LET this.getParentNodesRecursive().select(e|!((Chronos::ChiNode) e.type).isAbstract).select(e|e.isNavigable()) AS parents-»
        relations: [«IF children.size > 0 || parents.size > 0-»{«ENDIF-»
«FOREACH children AS curChild SEPARATOR "        }, {"»
  «IF curChild.type.metaType.toString().contains("ChiManyToMany") && curChild.type.getOtherEndAllowSourceType(curChild.getOtherEnd(), false).size == 1-»
    «LET curChild.type.getOtherEndAllowSourceType(curChild.getOtherEnd(), false).first() AS otherNmEnd-»
            name: "«otherNmEnd.getRoleName()»",
            type: "«otherNmEnd.type.name»",
            fkName: "«otherNmEnd.getFKName()»",
            aggregationKind: "«otherNmEnd.aggregation»",
    «ENDLET-»
  «ELSE-»
            name: "«curChild.getRoleName()»",
            type: "«curChild.type.name»",
            fkName: "«curChild.getFKName()»",
            aggregationKind: "«curChild.aggregation»",
  «ENDIF-»
            maxMultiplicity: "«IF curChild.getUpper() == -1»unbounded«ELSE»«curChild.getUpper()»«ENDIF-»",
            thisEndName: "«curChild.getOtherEnd().getRoleName()»",
            isSortable: «IF getOrderByName(curChild.type) == defaultOrderByName()-»true«ELSE-»false«ENDIF-»,
            relationType: "child"
«ENDFOREACH-»«IF children.size > 0 && parents.size > 0-»        }, {«ENDIF-»
«FOREACH parents AS curParent SEPARATOR "        }, {"»
            name: "«curParent.getRoleName()»",
            type: "«curParent.type.name»",
            fkName: "«curParent.getFKName()»",
            aggregationKind: "«curParent.aggregation»",
            maxMultiplicity: "«IF curParent.getUpper() == -1»unbounded«ELSE»«curParent.getUpper()»«ENDIF-»",
            thisEndName: "«curParent.getOtherEnd().getRoleName()»",
            isSortable: false,
            relationType: "parent"
«ENDFOREACH-»«IF children.size > 0 || parents.size > 0-»        }«ENDIF-»]
«ENDLET-»
«ENDLET-»

«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Body").asProtectedRegionId()»
        , listView: 'app/js/ui/data/widget/EntityListWidget'
        , detailView: 'app/js/ui/data/widget/EntityFormWidget'
«ENDPROTECT»
    });
«PROTECT CSTART "// " CEND "" ID (ApplicationPath().asPath()+"/public/js/model/types/"+this.getFullPackageName().asPath()+"/"+this.name+"Class.js/Static").asProtectedRegionId()»
«ENDPROTECT»
    return «this.name»;
});
«ENDFILE-»
«ENDDEFINE»
