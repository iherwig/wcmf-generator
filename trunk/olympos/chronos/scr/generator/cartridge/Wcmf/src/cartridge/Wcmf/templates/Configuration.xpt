«IMPORT uml»
«IMPORT Chronos»

«EXTENSION common::util»
«EXTENSION common::umlutils»
«EXTENSION common::naming»

«EXTENSION cartridge::ChronosCommon::naming»
«EXTENSION cartridge::Wcmf::extensions::globals»
«EXTENSION cartridge::Wcmf::extensions::umlutils»
«EXTENSION cartridge::Wcmf::extensions::util»

«EXTENSION cartridge::ChronosCommon::domain::ChiNode»
«EXTENSION cartridge::ChronosCommon::domain::ChiActionKey»

«REM» This template expands the configuration files (*.ini) ------«ENDREM»

«DEFINE file FOR Model-»
  «FOREACH this.getConfigurationFiles() AS curConfig»
    «FILE ApplicationPath().asPath()+"/config/"+curConfig-»
;
; This file was generated by ChronosGenerator«IF !GeneratorVersion().isNullOrEmpty()» «GeneratorVersion()»«ENDIF» from «ModelFile()»«IF PrintGenerateDate()» on «Date()»«ENDIF».
; Manual modifications should be placed inside the protected regions.
;
«LET (List[String]) {} AS expandedSections-»
«EXPAND sections(curConfig, expandedSections) FOREACH this.getModel().allOwnedElements().typeSelect(ChiSystem)-»
«ENDLET-»

«IF curConfig.isDefaultConfig()-»
«EXPAND mapper(curConfig) FOREACH this.getModel().allOwnedElements().typeSelect(uml::Class)-»
«ENDIF-»

«PROTECT CSTART "; " CEND "" ID (ApplicationPath()+"/config/"+curConfig).asProtectedRegionId()»
«ENDPROTECT»
«ENDFILE-»
«ENDFOREACH-»
«ENDDEFINE»

«REM» sections ---------------------------------------------------«ENDREM»
«DEFINE sections(String curConfig, List[String] expandedSections) FOR ChiSystem-»
  «IF this.plattform == "wcmf"-»
    «LET getActionKeys(this.getModel(), curConfig) AS actionKeys-»
      «IF !expandedSections.contains(this.name.toLowerCase()) && (this.config == curConfig || (actionKeys.size > 0 && !hasConfigSection(this.getModel(), curConfig, this.name) &&
        (this.name.toLowerCase() == "actionmapping" || this.name.toLowerCase() == "views" || this.name.toLowerCase() == "routes")
      ))-»
      «LET expandedSections.add(this.name.toLowerCase()) AS expandedSections-»
[«this.name»]
«IF !this.getComment("\n; ").isNullOrEmpty()»; «this.getComment("\n; ")»
«ENDIF-»
«PROTECT CSTART "; " CEND "" ID (ApplicationPath()+"/config/"+curConfig+"/"+this.name+"SectionBegin").asProtectedRegionId()»
«ENDPROTECT»
    «IF this.config == curConfig-»
      «FOREACH this.ownedAttribute AS curAttribute-»
«IF !curAttribute.getComment("\n; ").isNullOrEmpty()»; «curAttribute.getComment("\n; ")»
«ENDIF-»
«curAttribute.name» = «curAttribute.defaultValue.stringValue()»
      «ENDFOREACH-»
    «ENDIF-»
    «IF curConfig.isDefaultConfig()-»
      «IF this.name.toLowerCase() == "typemapping"-»
        «EXPAND typeMapping(curConfig) FOREACH this.getModel().allOwnedElements().typeSelect(uml::Class)-»
      «ENDIF-»
    «ENDIF-»
    «IF this.name.toLowerCase() == "actionmapping"-»
      «EXPAND actionMapping(curConfig) FOREACH actionKeys-»
    «ENDIF-»
    «IF this.name.toLowerCase() == "views"-»
      «EXPAND views(curConfig) FOREACH actionKeys-»
    «ENDIF-»
    «IF this.name.toLowerCase() == "routes"-»
      «EXPAND routes(curConfig) FOREACH actionKeys-»
    «ENDIF-»
«PROTECT CSTART "; " CEND "" ID (ApplicationPath()+"/config/"+curConfig+"/"+this.name+"SectionEnd").asProtectedRegionId()»
«ENDPROTECT»

      «ENDLET-»
      «ENDIF-»
    «ENDLET-»
  «ENDIF-»
«ENDDEFINE»

«REM» typeMapping ------------------------------------------------«ENDREM»
«DEFINE typeMapping(String curConfig) FOR uml::Class-»«ENDDEFINE»
«DEFINE typeMapping(String curConfig) FOR ChiNode-»
  «IF this.isApplicationClass() && !this.isAbstract-»
«this.getFullPackageName().asPackageName()».«this.name» = $«this.getFullPackageName().asPackageName().replaceAll("\\.", "_")»_«this.name.asMapper()»
  «ENDIF-»
«ENDDEFINE»

«REM» mapper -----------------------------------------------------«ENDREM»
«DEFINE mapper(String curConfig) FOR uml::Class-»«ENDDEFINE»
«DEFINE mapper(String curConfig) FOR ChiNode-»
  «IF this.isApplicationClass() && !this.isAbstract-»
[«this.getFullPackageName().asPackageName().replaceAll("\\.", "_")»_«this.name.asMapper()»]
__class = «this.getFullPackageName().asPhpPackage()»\_base\«this.name.asMapper()»
connectionParams = $«this.getInitparams()»

  «ENDIF-»
«ENDDEFINE»

«REM» actionMapping ----------------------------------------------«ENDREM»
«DEFINE actionMapping(String curConfig) FOR ChiActionKey-»
  «IF this.hasSourceController() && this.hasTargetController()-»
    «IF this.getSourceController().name == "Controller"-»
?«this.context»?«this.action» = «this.getTargetController().getFullPackageName().asPhpPackage()»\«this.getTargetController().name»«IF this.hasTargetMethod()»::«this.getTargetMethod().name»«ENDIF»
    «ELSE-»
«this.getSourceController().getFullPackageName().asPhpPackage()»\«this.getSourceController().name»?«this.context»?«this.action» = «this.getTargetController().getFullPackageName().asPhpPackage()»\«this.getTargetController().name»«IF this.hasTargetMethod()»::«this.getTargetMethod().name»«ENDIF»
    «ENDIF-»
  «ENDIF-»
«ENDDEFINE»

«REM» views ------------------------------------------------------«ENDREM»
«DEFINE views(String curConfig) FOR ChiActionKey-»
  «IF this.hasSourceController() && this.hasTargetView()-»
«this.getSourceController().getFullPackageName().asPhpPackage()»\«this.getSourceController().name»?«this.context»?«this.action» = «this.getTargetView().getFullPackageName().asPath()-»
/«this.getTargetView().name.asTemplateFile()»
  «ENDIF-»
«ENDDEFINE»

«REM» routes -----------------------------------------------------«ENDREM»
«DEFINE routes(String curConfig) FOR ChiActionKey-»
  «IF this.hasSourceController() && this.hasTargetController() && this.hasSourceRoute()-»
«this.getSourceRoute()» = «this.asParams()»
  «ENDIF-»
«ENDDEFINE»