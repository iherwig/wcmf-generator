import uml;
import Chronos;

extension common::util;

uml::Model importEnumerations(uml::Model source, uml::Model cim):
	source.allOwnedElements().typeSelect(uml::PrimitiveType).importEnumeration(cim) ->
	
	source
;

Void importEnumeration(uml::PrimitiveType this, uml::Model cim):
	//(new uml::Enumeration).de

	let mirror = cim.allOwnedElements().typeSelect(uml::Enumeration).selectFirst(e|e.name == this.name):
	
	mirror != null ? (
		debug("Importing enumeration " + this.name) ->
		this.getNearestPackage().ownedType.add(mirror) ->
		this.getModel().allOwnedElements().typeSelect(uml::Property).select(e|e.type == this).setType(mirror) ->
		this.destroy()
	) : (
		Void
	)
;
