«IMPORT uml»
«IMPORT Chronos»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»

«EXTENSION cartridge::BrowserStatistics::statistics»

«DEFINE file FOR uml::Model»
«FILE "browser.dat"»
<?php
$statisticsData = array(
	«EXPAND header(1, 0, false, "Requirements", "Requirements", this.getGoalsAll().size + this.getRequirementsAll().size + this.getFeaturesAll().size + this.getIssuesAll().size) FOR this»,

	«EXPAND rowTemplate(11, 1, false, "ChiGoals", "All ChiGoals", -1) FOR this.getGoalsAll()», 
	«EXPAND rowTemplate(1011, 11, true, "invalid child", "ChiGoals that do not have a ChiRequirement or a ChiGoal", 1 - (E() + this.getGoalsNoValidChild().size) / this.getGoalsAll().size) FOR this.getGoalsNoValidChild()»,
	«EXPAND rowTemplate(2011, 11, true, "without Priority", "ChiGoals that do not have a priority > 0", 1 - (E() + this.getGoalsNoPriority().size) / this.getGoalsAll().size) FOR this.getGoalsNoPriority()»,
	«EXPAND rowTemplate(3011, 11, true, "Value_Goal is no integer", "ChiGoals that do not have a Value_Goal of type integer", 1 - (E() + this.getGoalsNoValueGoalInt().size) / this.getGoalsAll().size) FOR this.getGoalsNoValueGoalInt()»,
	«EXPAND rowTemplate(4011, 11, true, "multiple children types", "ChiGoals that have both a ChiGoal and a ChiRequirement as child", 1 - (E() + this.getGoalsBothTypesOfChildren().size) / this.getGoalsAll().size) FOR this.getGoalsBothTypesOfChildren()», 
	«EXPAND rowTemplate(5011, 11, true, "not achieved", "ChiGoals that do not have a ChiRequirement that have a ChiFeature", 1 - (E() + this.getGoalsNonAchieved().size) / this.getGoalsAll().size) FOR this.getGoalsNonAchieved()»,
	
	«EXPAND rowTemplate(21, 1, false, "ChiRequirements", "All ChiRequirements", -1) FOR this.getRequirementsAll()»,
	«EXPAND rowTemplate(1021, 21, true, "without parent", "ChiRequirements that do not have a ChiRequirement or ChiGoal as parent", 1 - (E() + this.getRequirementsWithoutParent().size) / this.getRequirementsAll().size) FOR this.getRequirementsWithoutParent()»,
	«EXPAND rowTemplate(2021, 21, true, "without child", "ChiRequirements that do not have any ChiFeature or ChiIssue", 1 - (E() + this.getRequirementsNoChildren().size) / this.getRequirementsAll().size) FOR this.getRequirementsNoChildren()»,
	«EXPAND rowTemplate(3021, 21, true, "more than one feature", "ChiRequirements that have more than one ChiFeature", 1 - (E() + this.getRequirementsMoreThanOneFeature().size) / this.getRequirementsAll().size) FOR this.getRequirementsMoreThanOneFeature()»,
	«EXPAND rowTemplate(4021, 21, true, "multiple children types", "ChiRequirements that have both a ChiRequirement and a ChiFeature/ChiIssue as child", 1 - (E() + this.getRequirementsBothTypesOfChildren().size) / this.getRequirementsAll().size) FOR this.getRequirementsBothTypesOfChildren()»,
	«EXPAND rowTemplate(5021, 21, true, "both ChiFeature and ChiIssue", "ChiRequirements that have both a ChiFeature and a ChiIssue", 1 - (E() + this.getRequirementsBothFeatureIssue().size) / this.getRequirementsAll().size) FOR this.getRequirementsBothFeatureIssue()»,

	«EXPAND rowTemplate(31, 1, false, "ChiFeatures", "All ChiFeatures", -1) FOR this.getFeaturesAll()»,
	«EXPAND rowTemplate(1031, 31, true, "without Parent", "ChiFeatures not connected to a ChiRequirement",  1 - (E() + this.getFeaturesWithoutParent().size) / this.getFeaturesAll().size) FOR this.getFeaturesWithoutParent()»,
	«EXPAND rowTemplate(2031, 31, true, "not fully implemented", "ChiFeature with Status = 'implemented' MUST have a ChiBusinessUseCase", 1 - (E() + this.getFeaturesImplementedIncomplete().size) / this.getFeaturesAll().size) FOR this.getFeaturesImplementedIncomplete()»,

	«EXPAND rowTemplate(41, 1, false, "ChiIssues", "All ChiIssues", -1) FOR this.getIssuesAll()»,
	«EXPAND rowTemplate(1041, 41, true, "without parent", "ChiIssues that do not have a ChiRequirement", 1 - (E() + this.getIssuesWithoutParent().size) / this.getIssuesAll().size) FOR this.getIssuesWithoutParent()»,

	«EXPAND header(2, 0, false, "Use Cases", "Use Cases", this.getBusinessProcessesAll().size + this.getBusinessUcAll().size + this.getActivitySetsAll().size + this.getActivitiesAll().size + this.getInitialsAll().size + this.getFinalsAll().size + this.getDecisionsAll().size + this.getObjectsAll().size) FOR this»,

	«EXPAND rowTemplate(12, 2, false, "ChiBusinessProcess", "All ChiBusinessProcesses", -1) FOR this.getBusinessProcessesAll()»,
	«EXPAND rowTemplate(1012, 12, true, "without ChiBusinessUseCase", "ChiBusinessProcesss that have no ChiBusinessUseCase", 1 - (E() + this.getBusinessProcessesWithoutUc().size) / this.getBusinessProcessesAll().size) FOR this.getBusinessProcessesWithoutUc()»,
	
	«EXPAND rowTemplate(22, 2, false, "ChiBusinessUseCase", "All ChiBusinessUseCases", -1) FOR this.getBusinessUcAll()»,
	«EXPAND rowTemplate(1022, 22, true, "without Feature", "ChiBusinessUseCases that have no ChiFeature", 1 - (E() + this.getBusinessUcWithoutFeature().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutFeature()»,
	«EXPAND rowTemplate(2022, 22, true, "without Scope", "ChiBusinessUseCases that have no Scope", 1 - (E() + this.getBusinessUcWithoutScope().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutScope()»,
	«EXPAND rowTemplate(3022, 22, true, "without GoalInContext", "ChiBusinessUseCases that have no GoalInContext", 1 - (E() + this.getBusinessUcWithoutGoalInContext().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutGoalInContext()»,
	«EXPAND rowTemplate(4022, 22, true, "without Trigger = AcitvityInitial", "ChiBusinessUseCases that have no ActivityInitial with the same name as Trigger", 1 - (E() + this.getBusinessUcWithoutTriggerEqInitial().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutTriggerEqInitial()»,
	«EXPAND rowTemplate(5022, 22, true, "without MainSuccessScenario = ActivityFinal", "ChiBusinessUseCases that have no ActivityFinal with the same name as MainSuccessScenario", 1 - (E() + this.getBusinessUcWithoutMainSuccessScenarioEqFinal().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutMainSuccessScenarioEqFinal()»,
	«EXPAND rowTemplate(6022, 22, true, "without active PrimaryActor", "ChiBusinessUseCases that have a ChiBusinessPartnerPassive as PrimaryActor", 1 - (E() + this.getBusinessUcWithPrimaryActorPassive().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithPrimaryActorPassive()»,
	«EXPAND rowTemplate(7022, 22, true, "without ActivitySet", "ChiBusinessUseCases that have no ActivitySet", 1 - (E() + this.getBusinessUcWithoutActivitySet().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutActivitySet()»,
	«EXPAND rowTemplate(8022, 22, true, "without Actor", "ChiBusinessUseCases that have no Actor", 1 - (E() + this.getBusinessUcWithoutActor().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutActor()»,
	«EXPAND rowTemplate(9022, 22, true, "without Trigger", "ChiBusinessUseCases that have no Trigger", 1 - (E() + this.getBusinessUcWithoutTrigger().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutTrigger()»,
	«EXPAND rowTemplate(10022, 22, true, "without MainSuccessScenario", "ChiBusinessUseCases that have no MainSuccessScenario", 1 - (E() + this.getBusinessUcWithoutMainSuccessScenario().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutMainSuccessScenario()»,
	«EXPAND rowTemplate(11022, 22, true, "without PrimaryActor", "ChiBusinessUseCases that have no PrimaryActor", 1 - (E() + this.getBusinessUcWithoutPrimaryActor().size) / this.getBusinessUcAll().size) FOR this.getBusinessUcWithoutPrimaryActor()»,
	
	«EXPAND rowTemplateBasic(32, 2, false, "ActivitySet", "All ActivitySets", -1) FOR this.getActivitySetsAll()»,
	«EXPAND rowTemplateBasic(1032, 32, true, "duplicate name", "ActivitySets that have no globally unique name", 1 - (E() + this.getActivitySetsDuplicateName().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsDuplicateName()»,
	«EXPAND rowTemplateBasic(2032, 32, true, "without name", "ActivitySets that have no name", 1 - (E() + this.getActivitySetsWithoutName().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsWithoutName()»,
	«EXPAND rowTemplateBasic(3032, 32, true, "without ActivityInitial", "ActivitySets that have not exactly one ActivityInitial ", 1 - (E() + this.getActivitySetsWitoutOneInitial().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsWitoutOneInitial()»,
	«EXPAND rowTemplateBasic(4032, 32, true, "without ActivityFinal", "ActivitySets that have no ActivityFinal", 1 - (E() + this.getActivitySetsWithoutFinal().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsWithoutFinal()»,
	«EXPAND rowTemplateBasic(5032, 32, true, "without one input ChiObject", "ActivitySets that have not exactly one input ChiObject ", 1 - (E() + this.getActivitySetsWithoutOneInputChiObject().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsWithoutOneInputChiObject()»,
	«EXPAND rowTemplateBasic(6032, 32, true, "without output ChiObject", "ActivitySets that have no output ChiObject", 1 - (E() + this.getActivitySetsWithoutOutputChiObject().size) / this.getActivitySetsAll().size) FOR this.getActivitySetsWithoutOutputChiObject()»,

	«EXPAND rowTemplateBasic(42, 2, false, "Activity", "All Activities", -1) FOR this.getActivitiesAll()»,
	«EXPAND rowTemplateBasic(1042, 42, true, "without name", "Activities that have no name", 1 - (E() + this.getActivitiesWithoutName().size) / this.getActivitiesAll().size) FOR this.getActivitiesWithoutName()»,
	«EXPAND rowTemplateBasic(2042, 42, true, "without incoming/outgoing arrow", "Activities that have no incoming or no outgoing arrow", 1 - (E() + this.getActivitiesWithoutIncomingOutgoing().size) / this.getActivitiesAll().size) FOR this.getActivitiesWithoutIncomingOutgoing()»,
	«EXPAND rowTemplateBasic(3042, 42, true, "duplicate name", "Activities that have no unique name within its ActivitySet", 1 - (E() + this.getActivitiesDuplicateName().size) / this.getActivitiesAll().size) FOR this.getActivitiesDuplicateName()»,
	«EXPAND rowTemplateBasic(4042, 42, true, "several ProductionRulesets", "Activities that have more than one ProductionRuleset ", 1 - (E() + this.getActivitiesGtOneProductionRulesets().size) / this.getActivitiesAll().size) FOR this.getActivitiesGtOneProductionRulesets()»,
	«EXPAND rowTemplateBasic(5042, 42, true, "non-consecutive", "Activities that are not consecutive within one ProductionRuleset", 1 - (E() + this.getActivitiesProductionRulesetNonConsecutive().size) / this.getActivitiesAll().size) FOR this.getActivitiesProductionRulesetNonConsecutive()»,

	«EXPAND rowTemplateBasic(52, 2, false, "ActivityInitial", "All ActivityInitials", -1) FOR this.getInitialsAll()»,
	«EXPAND rowTemplateBasic(1052, 52, true, "without outgoing arrow", "ActivityInitials that have no outgoing arrow", 1 - (E() + this.getInitialsWithoutOutgoing().size) / this.getInitialsAll().size) FOR this.getInitialsWithoutOutgoing()»,

	«EXPAND rowTemplateBasic(62, 2, false, "ActivityFinal", "All ActivityFinals", -1) FOR this.getFinalsAll()»,
	«EXPAND rowTemplateBasic(1062, 62, true, "without incoming arrow", "ActivityFinals that have no incoming arrow", 1 - (E() + this.getFinalsWithoutIncoming().size) / this.getFinalsAll().size) FOR this.getFinalsWithoutIncoming()»,

	«EXPAND rowTemplateBasic(72, 2, false, "ActivityDecision", "All ActivityDecisions", -1) FOR this.getDecisionsAll()»,
	«EXPAND rowTemplateBasic(1072, 72, true, "without name", "ActivityDecisions that have no name", 1 - (E() + this.getDecisionsWithoutName().size) / this.getDecisionsAll().size) FOR this.getDecisionsWithoutName()»,
	«EXPAND rowTemplateBasic(2072, 72, true, "duplicate name", "ActivityDecisions that have no unique name within its ActivitySet", 1 - (E() + this.getDecisionsDuplicateName().size) / this.getDecisionsAll().size) FOR this.getDecisionsDuplicateName()»,
	«EXPAND rowTemplateBasic(3072, 72, true, "not one incoming, two outgoing arrows", "ActivityDecisions that have no incoming or less than two outgoing arrows", 1 - (E() + this.getDecisionsNoIncomingLt2Outgoing().size) / this.getDecisionsAll().size) FOR this.getDecisionsNoIncomingLt2Outgoing()»,
	«EXPAND rowTemplateBasic(4072, 72, true, "outgoing arrows duplicate name", "ActivityDecisions that have no unique names at its outgoing arrows", 1 - (E() + this.getDecisionsDuplicateOutgoing().size) / this.getDecisionsAll().size) FOR this.getDecisionsDuplicateOutgoing()»,
	«EXPAND rowTemplateBasic(5072, 72, true, "several ProductionRulesets", "ActivityDecisions that have more than one ProductionRuleset", 1 - (E() + this.getDecisionsGtOneProductionRulesets().size) / this.getDecisionsAll().size) FOR this.getDecisionsGtOneProductionRulesets()»,
	«EXPAND rowTemplateBasic(6072, 72, true, "no prepended Activity", "ActivityDecisions that have no ProductionRuleset and are not prepended by an Activity", 1 - (E() + this.getDecisionsWithoutPreActivity().size) / this.getDecisionsAll().size) FOR this.getDecisionsWithoutPreActivity()»,
	«EXPAND rowTemplateBasic(7072, 72, true, "non-consecutive", "ActivityDecisions that are not consecutive within one ProductionRuleset", 1 - (E() + this.getDecisionsProductionRulesetNonConsecutive().size) / this.getDecisionsAll().size) FOR this.getDecisionsProductionRulesetNonConsecutive()»,
	«EXPAND rowTemplateBasic(8072, 72, true, "several per ProductionRuleset", "ActivityDecisions that are not the only ActivityDecisions within a ProductionRuleset", 1 - (E() + this.getDecisionsMultipleWithinProductionRuleset().size) / this.getDecisionsAll().size) FOR this.getDecisionsMultipleWithinProductionRuleset()»,
	«EXPAND rowTemplateBasic(9072, 72, false, "loop style", "All loop stlye ActivityDecisions", -1) FOR this.getDecisionsLoopsAll()»,
	«EXPAND rowTemplateBasic(109072, 9072, true, "not all required arrow names", "Loop style ActivityDecisions that have no LoopStart outgoing arrow or LoopContinue incoming arrow", 1 - (E() + this.getDecisionsLoopsWithoutRequiredArrows().size) / this.getDecisionsLoopsAll().size) FOR this.getDecisionsLoopsWithoutRequiredArrows()»,
	«EXPAND rowTemplateBasic(209072, 9072, true, "not all required predecessors", "ActivityDecisions that have no predecessors like Activity('get list') -> ChiObject('list') -> Activity('evaluate list') -> ActivityDecision", 1 - (E() + this.getDecisionsLoopsWithoutRequiredPredecessors().size) / this.getDecisionsLoopsAll().size) FOR this.getDecisionsLoopsWithoutRequiredPredecessors()»,
	«EXPAND rowTemplateBasic(309072, 9072, true, "not all required successors", "ActivityDecisions that have no successors like ActivityDecision -> Activity('get list element') -> ChiObject('list element')", 1 - (E() + this.getDecisionsLoopsWithoutRequiredSuccessors().size) / this.getDecisionsLoopsAll().size) FOR this.getDecisionsLoopsWithoutRequiredSuccessors()»,
	«EXPAND rowTemplateBasic(409072, 9072, true, "other parts not in same ProductionRuleset", "ActivityDecisions that have not the same ProductionRuleset as the required predecessors/successors ", 1 - (E() + this.getDecisionsLoopsWithoutRequiredProductionRuleset().size) / this.getDecisionsLoopsAll().size) FOR this.getDecisionsLoopsWithoutRequiredProductionRuleset()»,

	«EXPAND rowTemplateBasic(82, 2, false, "ChiObject", "All ChiObjects", -1) FOR this.getObjectsAll()»,
	«EXPAND rowTemplateBasic(1082, 82, true, "without name", "ChiObjects that have no name", 1 - (E() + this.getObjectsWithoutName().size) / this.getObjectsAll().size) FOR this.getObjectsWithoutName()»,
	«EXPAND rowTemplateBasic(2082, 82, true, "no incoming arrow", "ChiObjects that have no incoming arrow", 1 - (E() + this.getObjectsWithoutIncoming().size) / this.getObjectsAll().size) FOR this.getObjectsWithoutIncoming()»,
	«EXPAND rowTemplateBasic(3082, 82, true, "no outgoing arrow", "ChiObjects that have no outgoing arrow", 1 - (E() + this.getObjectsWithoutOutgoing().size) / this.getObjectsAll().size) FOR this.getObjectsWithoutOutgoing()»,
	«EXPAND rowTemplateBasic(4082, 82, true, "request no outgoing arrow", "Request ChiObjects that have no outgoing arrow", 1 - (E() + this.getObjectsRequestWithoutOutgoing().size) / this.getObjectsAll().size) FOR this.getObjectsRequestWithoutOutgoing()»,
	«EXPAND rowTemplateBasic(5082, 82, true, "response no incoming arrow", "Response ChiObjects that have no incoming arrow", 1 - (E() + this.getObjectsResponseWithoutIncoming().size) / this.getObjectsAll().size) FOR this.getObjectsResponseWithoutIncoming()»,
	«EXPAND rowTemplateBasic(6082, 82, true, "response different type", "Response ChiObjects that have not the same ChiNode as other response ChiObjects ", 1 - (E() + this.getObjectsResponseDifferentNode().size) / this.getObjectsAll().size) FOR this.getObjectsResponseDifferentNode()»,
	«EXPAND rowTemplateBasic(7082, 82, true, "without ChiNode", "ChiObjects that have no ChiNode", 1 - (E() + this.getObjectsWithoutNode().size) / this.getObjectsAll().size) FOR this.getObjectsWithoutNode()»,
	«EXPAND rowTemplateBasic(8082, 82, true, "same name, different ChiNode", "ChiObjects that have the same name but different ChiNodes ", 1 - (E() + this.getObjectsSameNameDifferentNode().size) / this.getObjectsAll().size) FOR this.getObjectsSameNameDifferentNode()»,

	«EXPAND header(3, 0, false, "Domain", "Domain", this.getNodesAll().size + this.getValuesAll().size + this.getActionKeysAll().size) FOR this»,

	«EXPAND rowTemplate(13, 3, false, "ChiNode", "All ChiNodes", -1) FOR this.getNodesAll()»,
	«EXPAND rowTemplate(1013, 13, true, "without name", "ChiNodes that have no name", 1 - (E() + this.getNodesWithoutName().size) / this.getNodesAll().size) FOR this.getNodesWithoutName()»,
	«EXPAND rowTemplate(2013, 13, true, "without orderby", "ChiNodes that have no orderby as 'none', 'sortkey' or attribute name", 1 - (E() + this.getNodesWithoutOrderby().size) / this.getNodesAll().size) FOR this.getNodesWithoutOrderby()»,
	«EXPAND rowTemplate(3013, 13, true, "without initparams", "ChiNodes that have no initparams as a ChiSystem name", 1 - (E() + this.getNodesWithoutInitparams().size) / this.getNodesAll().size) FOR this.getNodesWithoutInitparams()»,

	«EXPAND rowTemplate(23, 3, false, "ChiValue", "All ChiValues", -1) FOR this.getValuesAll()»,
	«EXPAND rowTemplate(1023, 23, true, "without name", "ChiValues that have no name", 1 - (E() + this.getValuesWithoutName().size) / this.getValuesAll().size) FOR this.getValuesWithoutName()»,
	«EXPAND rowTemplate(2023, 23, true, "without valid name", "ChiValues with the name 'type', 'state', 'oid', 'value', 'none' or 'sortkey'", 1 - (E() + this.getValuesInvalidName().size) / this.getValuesAll().size) FOR this.getValuesInvalidName()»,

	«EXPAND rowTemplateBasic(33, 3, false, "ChiActionKey", "All ChiActionKeys", -1) FOR this.getActionKeysAll()»,
	«EXPAND rowTemplateBasic(1033, 33, true, "without config", "ChiActionKeys that have no config", 1 - (E() + this.getActionKeysWithoutConfig().size) / this.getActionKeysAll().size) FOR this.getActionKeysWithoutConfig()»
);
«ENDFILE»
«ENDDEFINE»

«DEFINE rowTemplate(int id, int parentId, boolean isLeaf, String text, String toolTip, Real status) FOR List[Chronos::ChiBase]»
	array(
		"_id" => «id»,
		"objectList" => array(
			«FOREACH this AS currElem SEPARATOR ","»
				"«currElem.getAppliedStereotypes().first().name»::«currElem.Alias»"
			«ENDFOREACH»
		),
		"object" => "«text»",
		"toolTip" => "«toolTip»",
		"quantity" => «this.size»,
		"status" => «calculateTrafficLight(status)»,
		"_parent" => «parentId.filterNull()»,
		"_is_leaf" => «isLeaf ? "true" : "false"»
	)
«ENDDEFINE»

«DEFINE rowTemplateBasic(int id, int parentId, boolean isLeaf, String text, String toolTip, Real status) FOR List[uml::NamedElement]»
	array(
		"_id" => «id»,
		"objectList" => array(),
		"object" => "«text»",
		"toolTip" => "«toolTip»",
		"quantity" => «this.size»,
		"status" => «calculateTrafficLight(status)»,
		"_parent" => «parentId.filterNull()»,
		"_is_leaf" => «isLeaf ? "true" : "false"»
	)
«ENDDEFINE»

«DEFINE header(int id, int parentId, boolean isLeaf, String text, String toolTip, int quantity) FOR uml::Model»
	array(
		"_id" => «id»,
		"objectList" => array(),
		"object" => "«text»",
		"toolTip" => "«toolTip»",
		"quantity" => «quantity»,
		"status" => -1,
		"_parent" => «parentId.filterNull()»,
		"_is_leaf" => «isLeaf ? "true" : "false"»
	)
«ENDDEFINE»