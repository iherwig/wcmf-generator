generator-dir = .
uml-dir = ../uml
generated-code-dir = ../generated

chronosProfileUri = ${uml-dir}/chronos.profile.uml
sourceModelFile = ${uml-dir}/cwm-export.uml
normalizedModelPath = ${uml-dir}/normalized-model
expandDomainClassesExpression = cartridge::Grails::domain::root FOR sourceModel

domainTargetPath = ${generated-code-dir}/grails-app/domain
domainPackage = net.sourceforge.olympos.domain

# Profile configuration
# The following properties define the modelling profile.
profilename = Chronos

# Input configuration
# The following properties define the project specific input model.
# libraryPackage and applicationPackage are supposed to be direct children of rootPackage
transformedModelUmlFile = ${uml-dir}/transformed-model
rootPackage = project
libraryPackage = lib
applicationPackage = app
#rootPackage = Chronos_default::ChiDomain
#libraryPackage = wcmf
#applicationPackage = application

# Check configuration
# The following properties configure the generator checks. preCheckFile is run before model
	# to model transformation and postCheckFile is run afterwards
doCheck = false
preCheckFile = cartridge::ChiCmf::checks::pre
postCheckFile = cartridge::ChiCmf::checks::post
requiredControllerSuperclass = uml-generated::Chronos_default::ChiDomain::wcmf::lib::presentation::Controller
requiredNodeSuperclass = Model::project::lib::Node
containerNode = Model::${rootPackage}::${applicationPackage}::Container
#requiredControllerSuperclass = Model::Chronos_default::ChiDomain::wcmf::lib::presentation::Controller
#requiredNodeSuperclass = Model::Chronos_default::ChiDomain::wcmf::lib::model::Node

# Generator configuration
# The following properties configure the code generation from the input model.
configFileDefault = config.ini
projectname = Requirements
targetDir = ${generated-code-dir}/grails-app/domain
frameworkFileCwe = ${basePath}/frameworks/cwe.zip
expandCwe = cartridge::Cwe::root::root
targetDirCwe = ${targetDir}/cwe
fileHeader = <Your file header>
