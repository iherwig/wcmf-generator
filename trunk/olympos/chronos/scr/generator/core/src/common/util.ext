import uml;

/**
 * Logging
 */
Object debug(Object o) : 
	JAVA net.sourceforge.olympos.oaw.extend.Logger.debug(java.lang.Object)
;	
Object info(Object o) : 
	JAVA net.sourceforge.olympos.oaw.extend.Logger.info(java.lang.Object)
;	
Object warn(Object o) : 
	JAVA net.sourceforge.olympos.oaw.extend.Logger.warn(java.lang.Object)
;	
Object error(Object o) : 
	JAVA net.sourceforge.olympos.oaw.extend.Logger.error(java.lang.Object)
;
   
/**
 * Join a list of strings
 */
String join(List list, String separator) : 
	JAVA net.sourceforge.olympos.oaw.extend.Util.join(java.util.AbstractCollection, java.lang.String)
;

/**
 * Check if a string is empty
 */
Boolean isNullOrEmpty(String s) :
	s == null || s.trim().length == 0
;

/**
 * Check if a boolean is false
 */
Boolean isNullOrFalse(Boolean b) :
	b == null || !b
;
Boolean isNullOrFalse(uml::EnumerationLiteral b) :
	b == null || b.name.toString().matches("false")
;

/**
 * Get the string representation of a boolean
 */ 
String boolString(Boolean b) :
	b == null || !b ? "false" : "true"
;
String boolString(uml::EnumerationLiteral b) :
	b == null || b.name.toString().matches("false") ? "false" : "true"
;

String md5(String this):
	JAVA net.sourceforge.olympos.oaw.extend.Util.md5(java.lang.String)
;

String packageToPath(String input):
	input.replaceAll("\\.", "/")
;

String currentDateTime():
	JAVA net.sourceforge.olympos.oaw.extend.DateFormatter.now()
;

String generatorSignature():
	"This file was generated by ChronosGenerator version " + generatorVersion() + " build " + generatorBuild() + " on " + currentDateTime()
;

String generatorVersion():
	JAVA net.sourceforge.olympos.oaw.extend.GeneratorInfo.getVersion()
;

String generatorBuild():
	JAVA net.sourceforge.olympos.oaw.extend.GeneratorInfo.getBuild()
;

String groovyFileHeader():
	genericFileHeader()
;

String javaFileHeader():
	genericFileHeader()
;

String genericFileHeader():
	"/*\n * " + FILE_HEADER().replaceAll("\n", "\n * ") + "\n */\n"
;  

String FILE_HEADER(): GLOBALVAR fileHeader;

toBigInteger(Integer i):
	JAVA net.sourceforge.olympos.oaw.extend.Util.toBigInteger(java.math.BigInteger)
;
