<?php
/*
 * Copyright (c) 2009 The Olympos Development Team.
 * 
 * http://sourceforge.net/projects/olympos/
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/**
 * This file was generated by wCMFGenerator 3.0.0018 from requirements.uml on Thu Jan 13 15:11:12 CET 2011. 
 * Manual modifications should be placed inside the protected regions.
 */
require_once(BASE."application/include/model/wcmf/class.UserConfigBase.php");
// PROTECTED REGION ID(application/include/model/wcmf/class.UserConfig.php/Import) ENABLED START
require_once(BASE."wcmf/lib/persistence/class.PersistenceFacade.php");
require_once(BASE."wcmf/lib/persistence/class.ObjectQuery.php");
require_once(BASE."wcmf/lib/security/class.RightsManager.php");
require_once(BASE."wcmf/lib/security/class.UserManager.php");
// PROTECTED REGION END

/**
 * @class UserConfig
 * UserConfig description: 
 *
 * @author 
 * @version 1.0
 */
class UserConfig extends UserConfigBase
{
// PROTECTED REGION ID(application/include/model/wcmf/class.UserConfig.php/Body) ENABLED START
  /**
   * Retrieve a UserConfig instance with a given key
   * @param key The key of the config entry to get
   * @param createIfNotExisting True/False wether to create a new entry if the requested does not exist
   *    (must be persisted later)
   * @return A UserConfig instance or null
   */
  public static function getConfigEntry($key, $createIfNotExisting=true)
  {
  	$configEntry = null;
  	
    $persistenceFacade = PersistenceFacade::getInstance();
    $rightsManager = RightsManager::getInstance();
    $authUser = $rightsManager->getAuthUser();
      
    // load user preferences
    $query = PersistenceFacade::createObjectQuery('UserConfig');
    $configTpl = $query->getObjectTemplate('UserConfig');
    $configTpl->setKey($key);
    $userTpl = $query->getObjectTemplate(UserManager::getUserClassName());
    $userTpl->setOID($authUser->getOID());
    $userTpl->addChild($configTpl);
    
    $configList = $query->execute(BUILDDEPTH_SINGLE);
    if (sizeof($configList) > 0) {
      $configEntry = $configList[0];
    }
    elseif ($createIfNotExisting) {
      $configEntry = $persistenceFacade->create('UserConfig', BUILDDEPTH_SINGLE);
      $configEntry->setKey($key);
      $authUser->addChild($configEntry);
    }
    return $configEntry;
  }
// PROTECTED REGION END
}
?>
