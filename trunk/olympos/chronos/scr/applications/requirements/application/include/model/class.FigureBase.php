<?php
/*
 * Copyright (c) 2009 The Olympos Development Team.
 * 
 * http://sourceforge.net/projects/olympos/
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html. If redistributing this code,
 * this entire header must remain intact.
 */

/**
 * This file was generated by wCMFGenerator 3.0.0018 from requirements.uml on Tue Jan 05 15:38:15 CET 2010. 
 * Manual modifications should be placed inside the protected regions.
 */
require_once(BASE."application/include/model/class.EntityBase.php");

/**
 * @class Figure
 * Figure description: A figure is the graphical reppresentation of a node can be linked with manies diagrams.
 *
 * @author 
 * @version 1.0
 */
class FigureBase extends EntityBase
{
    function FigureBase($oid=null, $type=null)
    {
      if ($type == null)
        parent::__construct($oid, 'Figure');
      else
        parent::__construct($oid, $type);
    }
    /**
     * @see PersistentObject::getObjectDisplayName()
     */
    function getObjectDisplayName()
    {
      return Message::get("Figure");
    }
    /**
     * @see PersistentObject::getObjectDescription()
     */
    function getObjectDescription()
    {
      return Message::get("A figure is the graphical reppresentation of a node can be linked with manies diagrams.");
    }
    /**
     * @see PersistentObject::getValueDisplayName()
     */
    function getValueDisplayName($name, $type=null)
    {
      $displayName = $name;
      if ($name == 'id') $displayName = Message::get("id");
      if ($name == 'fk_chiobject_id') $displayName = Message::get("fk_chiobject_id");
      if ($name == 'fk_activity_id') $displayName = Message::get("fk_activity_id");
      if ($name == 'fk_activitydecision_id') $displayName = Message::get("fk_activitydecision_id");
      if ($name == 'fk_activityreceive_id') $displayName = Message::get("fk_activityreceive_id");
      if ($name == 'fk_activitysend_id') $displayName = Message::get("fk_activitysend_id");
      if ($name == 'fk_activityinitial_id') $displayName = Message::get("fk_activityinitial_id");
      if ($name == 'fk_activityfinal_id') $displayName = Message::get("fk_activityfinal_id");
      if ($name == 'fk_chisystem_id') $displayName = Message::get("fk_chisystem_id");
      if ($name == 'fk_productionrule_id') $displayName = Message::get("fk_productionrule_id");
      if ($name == 'fk_productionruleset_id') $displayName = Message::get("fk_productionruleset_id");
      if ($name == 'fk_ruleaction_id') $displayName = Message::get("fk_ruleaction_id");
      if ($name == 'fk_rulecondition_id') $displayName = Message::get("fk_rulecondition_id");
      if ($name == 'fk_rulesetvariable_id') $displayName = Message::get("fk_rulesetvariable_id");
      if ($name == 'fk_rulevariable_id') $displayName = Message::get("fk_rulevariable_id");
      if ($name == 'fk_chiworkerexternal_id') $displayName = Message::get("fk_chiworkerexternal_id");
      if ($name == 'fk_chiworkerinternal_id') $displayName = Message::get("fk_chiworkerinternal_id");
      if ($name == 'fk_chiworker_id') $displayName = Message::get("fk_chiworker_id");
      if ($name == 'fk_chibusinesspartneractive_id') $displayName = Message::get("fk_chibusinesspartneractive_id");
      if ($name == 'fk_chibusinesspartnerpassive_id') $displayName = Message::get("fk_chibusinesspartnerpassive_id");
      if ($name == 'fk_chibusinesspartner_id') $displayName = Message::get("fk_chibusinesspartner_id");
      if ($name == 'fk_actor_id') $displayName = Message::get("fk_actor_id");
      if ($name == 'fk_chibusinessprocess_id') $displayName = Message::get("fk_chibusinessprocess_id");
      if ($name == 'fk_chibusinessusecasecore_id') $displayName = Message::get("fk_chibusinessusecasecore_id");
      if ($name == 'fk_chibusinessusecase_id') $displayName = Message::get("fk_chibusinessusecase_id");
      if ($name == 'fk_chigoal_id') $displayName = Message::get("fk_chigoal_id");
      if ($name == 'fk_chirequirement_id') $displayName = Message::get("fk_chirequirement_id");
      if ($name == 'fk_chifeature_id') $displayName = Message::get("fk_chifeature_id");
      if ($name == 'fk_chiissue_id') $displayName = Message::get("fk_chiissue_id");
      if ($name == 'fk_operation_id') $displayName = Message::get("fk_operation_id");
      if ($name == 'fk_chinodemanytomany_id') $displayName = Message::get("fk_chinodemanytomany_id");
      if ($name == 'fk_chinode_id') $displayName = Message::get("fk_chinode_id");
      if ($name == 'fk_chicontroller_id') $displayName = Message::get("fk_chicontroller_id");
      if ($name == 'fk_chiview_id') $displayName = Message::get("fk_chiview_id");
      if ($name == 'fk_chiclass_id') $displayName = Message::get("fk_chiclass_id");
      if ($name == 'fk_feature_id') $displayName = Message::get("fk_feature_id");
      if ($name == 'fk_chivalue_id') $displayName = Message::get("fk_chivalue_id");
      if ($name == 'fk_property_id') $displayName = Message::get("fk_property_id");
      if ($name == 'fk_glossary_id') $displayName = Message::get("fk_glossary_id");
      if ($name == 'fk_diagram_id') $displayName = Message::get("fk_diagram_id");
      if ($name == 'fk_chibase_id') $displayName = Message::get("fk_chibase_id");
      if ($name == 'fk_activityset_id') $displayName = Message::get("fk_activityset_id");
      if ($name == 'BackgroundColor') $displayName = Message::get("BackgroundColor");
      if ($name == 'ForegroundColor') $displayName = Message::get("ForegroundColor");
      if ($name == 'GID') $displayName = Message::get("GID");
      if ($name == 'Height') $displayName = Message::get("Height");
      if ($name == 'PositionY') $displayName = Message::get("PositionY");
      if ($name == 'PositionX') $displayName = Message::get("PositionX");
      if ($name == 'Width') $displayName = Message::get("Width");
      if ($name == 'created') $displayName = Message::get("created");
      if ($name == 'creator') $displayName = Message::get("creator");
      if ($name == 'last_editor') $displayName = Message::get("last_editor");
      if ($name == 'modified') $displayName = Message::get("modified");
      return Message::get($displayName);
    }
    /**
     * @see PersistentObject::getValueDescription()
     */
    function getValueDescription($name, $type=null)
    {
      $description = $name;
      if ($name == 'id') $description = Message::get("");
      if ($name == 'fk_chiobject_id') $description = Message::get("");
      if ($name == 'fk_activity_id') $description = Message::get("");
      if ($name == 'fk_activitydecision_id') $description = Message::get("");
      if ($name == 'fk_activityreceive_id') $description = Message::get("");
      if ($name == 'fk_activitysend_id') $description = Message::get("");
      if ($name == 'fk_activityinitial_id') $description = Message::get("");
      if ($name == 'fk_activityfinal_id') $description = Message::get("");
      if ($name == 'fk_chisystem_id') $description = Message::get("");
      if ($name == 'fk_productionrule_id') $description = Message::get("");
      if ($name == 'fk_productionruleset_id') $description = Message::get("");
      if ($name == 'fk_ruleaction_id') $description = Message::get("");
      if ($name == 'fk_rulecondition_id') $description = Message::get("");
      if ($name == 'fk_rulesetvariable_id') $description = Message::get("");
      if ($name == 'fk_rulevariable_id') $description = Message::get("");
      if ($name == 'fk_chiworkerexternal_id') $description = Message::get("");
      if ($name == 'fk_chiworkerinternal_id') $description = Message::get("");
      if ($name == 'fk_chiworker_id') $description = Message::get("");
      if ($name == 'fk_chibusinesspartneractive_id') $description = Message::get("");
      if ($name == 'fk_chibusinesspartnerpassive_id') $description = Message::get("");
      if ($name == 'fk_chibusinesspartner_id') $description = Message::get("");
      if ($name == 'fk_actor_id') $description = Message::get("");
      if ($name == 'fk_chibusinessprocess_id') $description = Message::get("");
      if ($name == 'fk_chibusinessusecasecore_id') $description = Message::get("");
      if ($name == 'fk_chibusinessusecase_id') $description = Message::get("");
      if ($name == 'fk_chigoal_id') $description = Message::get("");
      if ($name == 'fk_chirequirement_id') $description = Message::get("");
      if ($name == 'fk_chifeature_id') $description = Message::get("");
      if ($name == 'fk_chiissue_id') $description = Message::get("");
      if ($name == 'fk_operation_id') $description = Message::get("");
      if ($name == 'fk_chinodemanytomany_id') $description = Message::get("");
      if ($name == 'fk_chinode_id') $description = Message::get("");
      if ($name == 'fk_chicontroller_id') $description = Message::get("");
      if ($name == 'fk_chiview_id') $description = Message::get("");
      if ($name == 'fk_chiclass_id') $description = Message::get("");
      if ($name == 'fk_feature_id') $description = Message::get("");
      if ($name == 'fk_chivalue_id') $description = Message::get("");
      if ($name == 'fk_property_id') $description = Message::get("");
      if ($name == 'fk_glossary_id') $description = Message::get("");
      if ($name == 'fk_diagram_id') $description = Message::get("");
      if ($name == 'fk_chibase_id') $description = Message::get("");
      if ($name == 'fk_activityset_id') $description = Message::get("");
      if ($name == 'BackgroundColor') $description = Message::get("the background color in RBG");
      if ($name == 'ForegroundColor') $description = Message::get("the foreground color in RBG");
      if ($name == 'GID') $description = Message::get("");
      if ($name == 'Height') $description = Message::get("");
      if ($name == 'PositionY') $description = Message::get("the orizontal position of this object");
      if ($name == 'PositionX') $description = Message::get("the vertical position of this object");
      if ($name == 'Width') $description = Message::get("");
      if ($name == 'created') $description = Message::get("the creation date of this object");
      if ($name == 'creator') $description = Message::get("the user that created this object");
      if ($name == 'last_editor') $description = Message::get("the last user that edited this object");
      if ($name == 'modified') $description = Message::get("the date when this object was modified");
      return Message::get($description);
    }
    /**
     * See if the node is an association object, that implements a many to many relation
     */
    function isManyToManyObject()
    {
      return false;
    }
    /**
     * Getter/Setter for properties
     */
    function getId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('id', DATATYPE_IGNORE);
      else
        return $this->getValue('id', DATATYPE_IGNORE);
    }
    function setId($id)
    {
      return $this->setValue('id', $id, DATATYPE_IGNORE);
    }
    function getFkChiobjectId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiobject_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiobject_id', DATATYPE_IGNORE);
    }
    function setFkChiobjectId($fk_chiobject_id)
    {
      return $this->setValue('fk_chiobject_id', $fk_chiobject_id, DATATYPE_IGNORE);
    }
    function getFkActivityId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activity_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activity_id', DATATYPE_IGNORE);
    }
    function setFkActivityId($fk_activity_id)
    {
      return $this->setValue('fk_activity_id', $fk_activity_id, DATATYPE_IGNORE);
    }
    function getFkActivitydecisionId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activitydecision_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activitydecision_id', DATATYPE_IGNORE);
    }
    function setFkActivitydecisionId($fk_activitydecision_id)
    {
      return $this->setValue('fk_activitydecision_id', $fk_activitydecision_id, DATATYPE_IGNORE);
    }
    function getFkActivityreceiveId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activityreceive_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activityreceive_id', DATATYPE_IGNORE);
    }
    function setFkActivityreceiveId($fk_activityreceive_id)
    {
      return $this->setValue('fk_activityreceive_id', $fk_activityreceive_id, DATATYPE_IGNORE);
    }
    function getFkActivitysendId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activitysend_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activitysend_id', DATATYPE_IGNORE);
    }
    function setFkActivitysendId($fk_activitysend_id)
    {
      return $this->setValue('fk_activitysend_id', $fk_activitysend_id, DATATYPE_IGNORE);
    }
    function getFkActivityinitialId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activityinitial_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activityinitial_id', DATATYPE_IGNORE);
    }
    function setFkActivityinitialId($fk_activityinitial_id)
    {
      return $this->setValue('fk_activityinitial_id', $fk_activityinitial_id, DATATYPE_IGNORE);
    }
    function getFkActivityfinalId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activityfinal_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activityfinal_id', DATATYPE_IGNORE);
    }
    function setFkActivityfinalId($fk_activityfinal_id)
    {
      return $this->setValue('fk_activityfinal_id', $fk_activityfinal_id, DATATYPE_IGNORE);
    }
    function getFkChisystemId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chisystem_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chisystem_id', DATATYPE_IGNORE);
    }
    function setFkChisystemId($fk_chisystem_id)
    {
      return $this->setValue('fk_chisystem_id', $fk_chisystem_id, DATATYPE_IGNORE);
    }
    function getFkProductionruleId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_productionrule_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_productionrule_id', DATATYPE_IGNORE);
    }
    function setFkProductionruleId($fk_productionrule_id)
    {
      return $this->setValue('fk_productionrule_id', $fk_productionrule_id, DATATYPE_IGNORE);
    }
    function getFkProductionrulesetId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_productionruleset_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_productionruleset_id', DATATYPE_IGNORE);
    }
    function setFkProductionrulesetId($fk_productionruleset_id)
    {
      return $this->setValue('fk_productionruleset_id', $fk_productionruleset_id, DATATYPE_IGNORE);
    }
    function getFkRuleactionId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_ruleaction_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_ruleaction_id', DATATYPE_IGNORE);
    }
    function setFkRuleactionId($fk_ruleaction_id)
    {
      return $this->setValue('fk_ruleaction_id', $fk_ruleaction_id, DATATYPE_IGNORE);
    }
    function getFkRuleconditionId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_rulecondition_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_rulecondition_id', DATATYPE_IGNORE);
    }
    function setFkRuleconditionId($fk_rulecondition_id)
    {
      return $this->setValue('fk_rulecondition_id', $fk_rulecondition_id, DATATYPE_IGNORE);
    }
    function getFkRulesetvariableId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_rulesetvariable_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_rulesetvariable_id', DATATYPE_IGNORE);
    }
    function setFkRulesetvariableId($fk_rulesetvariable_id)
    {
      return $this->setValue('fk_rulesetvariable_id', $fk_rulesetvariable_id, DATATYPE_IGNORE);
    }
    function getFkRulevariableId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_rulevariable_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_rulevariable_id', DATATYPE_IGNORE);
    }
    function setFkRulevariableId($fk_rulevariable_id)
    {
      return $this->setValue('fk_rulevariable_id', $fk_rulevariable_id, DATATYPE_IGNORE);
    }
    function getFkChiworkerexternalId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiworkerexternal_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiworkerexternal_id', DATATYPE_IGNORE);
    }
    function setFkChiworkerexternalId($fk_chiworkerexternal_id)
    {
      return $this->setValue('fk_chiworkerexternal_id', $fk_chiworkerexternal_id, DATATYPE_IGNORE);
    }
    function getFkChiworkerinternalId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiworkerinternal_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiworkerinternal_id', DATATYPE_IGNORE);
    }
    function setFkChiworkerinternalId($fk_chiworkerinternal_id)
    {
      return $this->setValue('fk_chiworkerinternal_id', $fk_chiworkerinternal_id, DATATYPE_IGNORE);
    }
    function getFkChiworkerId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiworker_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiworker_id', DATATYPE_IGNORE);
    }
    function setFkChiworkerId($fk_chiworker_id)
    {
      return $this->setValue('fk_chiworker_id', $fk_chiworker_id, DATATYPE_IGNORE);
    }
    function getFkChibusinesspartneractiveId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinesspartneractive_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinesspartneractive_id', DATATYPE_IGNORE);
    }
    function setFkChibusinesspartneractiveId($fk_chibusinesspartneractive_id)
    {
      return $this->setValue('fk_chibusinesspartneractive_id', $fk_chibusinesspartneractive_id, DATATYPE_IGNORE);
    }
    function getFkChibusinesspartnerpassiveId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinesspartnerpassive_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinesspartnerpassive_id', DATATYPE_IGNORE);
    }
    function setFkChibusinesspartnerpassiveId($fk_chibusinesspartnerpassive_id)
    {
      return $this->setValue('fk_chibusinesspartnerpassive_id', $fk_chibusinesspartnerpassive_id, DATATYPE_IGNORE);
    }
    function getFkChibusinesspartnerId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinesspartner_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinesspartner_id', DATATYPE_IGNORE);
    }
    function setFkChibusinesspartnerId($fk_chibusinesspartner_id)
    {
      return $this->setValue('fk_chibusinesspartner_id', $fk_chibusinesspartner_id, DATATYPE_IGNORE);
    }
    function getFkActorId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_actor_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_actor_id', DATATYPE_IGNORE);
    }
    function setFkActorId($fk_actor_id)
    {
      return $this->setValue('fk_actor_id', $fk_actor_id, DATATYPE_IGNORE);
    }
    function getFkChibusinessprocessId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinessprocess_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinessprocess_id', DATATYPE_IGNORE);
    }
    function setFkChibusinessprocessId($fk_chibusinessprocess_id)
    {
      return $this->setValue('fk_chibusinessprocess_id', $fk_chibusinessprocess_id, DATATYPE_IGNORE);
    }
    function getFkChibusinessusecasecoreId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinessusecasecore_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinessusecasecore_id', DATATYPE_IGNORE);
    }
    function setFkChibusinessusecasecoreId($fk_chibusinessusecasecore_id)
    {
      return $this->setValue('fk_chibusinessusecasecore_id', $fk_chibusinessusecasecore_id, DATATYPE_IGNORE);
    }
    function getFkChibusinessusecaseId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibusinessusecase_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibusinessusecase_id', DATATYPE_IGNORE);
    }
    function setFkChibusinessusecaseId($fk_chibusinessusecase_id)
    {
      return $this->setValue('fk_chibusinessusecase_id', $fk_chibusinessusecase_id, DATATYPE_IGNORE);
    }
    function getFkChigoalId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chigoal_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chigoal_id', DATATYPE_IGNORE);
    }
    function setFkChigoalId($fk_chigoal_id)
    {
      return $this->setValue('fk_chigoal_id', $fk_chigoal_id, DATATYPE_IGNORE);
    }
    function getFkChirequirementId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chirequirement_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chirequirement_id', DATATYPE_IGNORE);
    }
    function setFkChirequirementId($fk_chirequirement_id)
    {
      return $this->setValue('fk_chirequirement_id', $fk_chirequirement_id, DATATYPE_IGNORE);
    }
    function getFkChifeatureId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chifeature_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chifeature_id', DATATYPE_IGNORE);
    }
    function setFkChifeatureId($fk_chifeature_id)
    {
      return $this->setValue('fk_chifeature_id', $fk_chifeature_id, DATATYPE_IGNORE);
    }
    function getFkChiissueId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiissue_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiissue_id', DATATYPE_IGNORE);
    }
    function setFkChiissueId($fk_chiissue_id)
    {
      return $this->setValue('fk_chiissue_id', $fk_chiissue_id, DATATYPE_IGNORE);
    }
    function getFkOperationId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_operation_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_operation_id', DATATYPE_IGNORE);
    }
    function setFkOperationId($fk_operation_id)
    {
      return $this->setValue('fk_operation_id', $fk_operation_id, DATATYPE_IGNORE);
    }
    function getFkChinodemanytomanyId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chinodemanytomany_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chinodemanytomany_id', DATATYPE_IGNORE);
    }
    function setFkChinodemanytomanyId($fk_chinodemanytomany_id)
    {
      return $this->setValue('fk_chinodemanytomany_id', $fk_chinodemanytomany_id, DATATYPE_IGNORE);
    }
    function getFkChinodeId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chinode_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chinode_id', DATATYPE_IGNORE);
    }
    function setFkChinodeId($fk_chinode_id)
    {
      return $this->setValue('fk_chinode_id', $fk_chinode_id, DATATYPE_IGNORE);
    }
    function getFkChicontrollerId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chicontroller_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chicontroller_id', DATATYPE_IGNORE);
    }
    function setFkChicontrollerId($fk_chicontroller_id)
    {
      return $this->setValue('fk_chicontroller_id', $fk_chicontroller_id, DATATYPE_IGNORE);
    }
    function getFkChiviewId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiview_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiview_id', DATATYPE_IGNORE);
    }
    function setFkChiviewId($fk_chiview_id)
    {
      return $this->setValue('fk_chiview_id', $fk_chiview_id, DATATYPE_IGNORE);
    }
    function getFkChiclassId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chiclass_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chiclass_id', DATATYPE_IGNORE);
    }
    function setFkChiclassId($fk_chiclass_id)
    {
      return $this->setValue('fk_chiclass_id', $fk_chiclass_id, DATATYPE_IGNORE);
    }
    function getFkFeatureId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_feature_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_feature_id', DATATYPE_IGNORE);
    }
    function setFkFeatureId($fk_feature_id)
    {
      return $this->setValue('fk_feature_id', $fk_feature_id, DATATYPE_IGNORE);
    }
    function getFkChivalueId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chivalue_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chivalue_id', DATATYPE_IGNORE);
    }
    function setFkChivalueId($fk_chivalue_id)
    {
      return $this->setValue('fk_chivalue_id', $fk_chivalue_id, DATATYPE_IGNORE);
    }
    function getFkPropertyId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_property_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_property_id', DATATYPE_IGNORE);
    }
    function setFkPropertyId($fk_property_id)
    {
      return $this->setValue('fk_property_id', $fk_property_id, DATATYPE_IGNORE);
    }
    function getFkGlossaryId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_glossary_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_glossary_id', DATATYPE_IGNORE);
    }
    function setFkGlossaryId($fk_glossary_id)
    {
      return $this->setValue('fk_glossary_id', $fk_glossary_id, DATATYPE_IGNORE);
    }
    function getFkDiagramId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_diagram_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_diagram_id', DATATYPE_IGNORE);
    }
    function setFkDiagramId($fk_diagram_id)
    {
      return $this->setValue('fk_diagram_id', $fk_diagram_id, DATATYPE_IGNORE);
    }
    function getFkChibaseId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_chibase_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_chibase_id', DATATYPE_IGNORE);
    }
    function setFkChibaseId($fk_chibase_id)
    {
      return $this->setValue('fk_chibase_id', $fk_chibase_id, DATATYPE_IGNORE);
    }
    function getFkActivitysetId($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('fk_activityset_id', DATATYPE_IGNORE);
      else
        return $this->getValue('fk_activityset_id', DATATYPE_IGNORE);
    }
    function setFkActivitysetId($fk_activityset_id)
    {
      return $this->setValue('fk_activityset_id', $fk_activityset_id, DATATYPE_IGNORE);
    }
    function getBackgroundColor($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('BackgroundColor', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('BackgroundColor', DATATYPE_ATTRIBUTE);
    }
    function setBackgroundColor($BackgroundColor)
    {
      return $this->setValue('BackgroundColor', $BackgroundColor, DATATYPE_ATTRIBUTE);
    }
    function getForegroundColor($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('ForegroundColor', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('ForegroundColor', DATATYPE_ATTRIBUTE);
    }
    function setForegroundColor($ForegroundColor)
    {
      return $this->setValue('ForegroundColor', $ForegroundColor, DATATYPE_ATTRIBUTE);
    }
    function getGID($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('GID', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('GID', DATATYPE_ATTRIBUTE);
    }
    function setGID($GID)
    {
      return $this->setValue('GID', $GID, DATATYPE_ATTRIBUTE);
    }
    function getHeight($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('Height', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('Height', DATATYPE_ATTRIBUTE);
    }
    function setHeight($Height)
    {
      return $this->setValue('Height', $Height, DATATYPE_ATTRIBUTE);
    }
    function getPositionY($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('PositionY', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('PositionY', DATATYPE_ATTRIBUTE);
    }
    function setPositionY($PositionY)
    {
      return $this->setValue('PositionY', $PositionY, DATATYPE_ATTRIBUTE);
    }
    function getPositionX($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('PositionX', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('PositionX', DATATYPE_ATTRIBUTE);
    }
    function setPositionX($PositionX)
    {
      return $this->setValue('PositionX', $PositionX, DATATYPE_ATTRIBUTE);
    }
    function getWidth($unconverted=false)
    {
      if ($unconverted)
        return $this->getUnconvertedValue('Width', DATATYPE_ATTRIBUTE);
      else
        return $this->getValue('Width', DATATYPE_ATTRIBUTE);
    }
    function setWidth($Width)
    {
      return $this->setValue('Width', $Width, DATATYPE_ATTRIBUTE);
    }
    /**
     * Getter/Setter for related objects
     */
    function __call($name, $arguments)
    {
      // foreign key: ActivitySet
      if ($name == 'getActivitySetOID')
      {
        $fkValue = $this->getValue('fk_activityset_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivitySet', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivitySet')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivitySet'), $arguments);
          }
          else {
            $this->setValue('fk_activityset_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBase
      if ($name == 'getChiBaseOID')
      {
        $fkValue = $this->getValue('fk_chibase_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBase', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBase')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBase'), $arguments);
          }
          else {
            $this->setValue('fk_chibase_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Diagram
      if ($name == 'getDiagramOID')
      {
        $fkValue = $this->getValue('fk_diagram_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Diagram', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setDiagram')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setDiagram'), $arguments);
          }
          else {
            $this->setValue('fk_diagram_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Glossary
      if ($name == 'getGlossaryOID')
      {
        $fkValue = $this->getValue('fk_glossary_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Glossary', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setGlossary')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setGlossary'), $arguments);
          }
          else {
            $this->setValue('fk_glossary_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Property
      if ($name == 'getPropertyOID')
      {
        $fkValue = $this->getValue('fk_property_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Property', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setProperty')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setProperty'), $arguments);
          }
          else {
            $this->setValue('fk_property_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiValue
      if ($name == 'getChiValueOID')
      {
        $fkValue = $this->getValue('fk_chivalue_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiValue', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiValue')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiValue'), $arguments);
          }
          else {
            $this->setValue('fk_chivalue_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Feature
      if ($name == 'getFeatureOID')
      {
        $fkValue = $this->getValue('fk_feature_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Feature', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setFeature')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setFeature'), $arguments);
          }
          else {
            $this->setValue('fk_feature_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiClass
      if ($name == 'getChiClassOID')
      {
        $fkValue = $this->getValue('fk_chiclass_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiClass', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiClass')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiClass'), $arguments);
          }
          else {
            $this->setValue('fk_chiclass_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiView
      if ($name == 'getChiViewOID')
      {
        $fkValue = $this->getValue('fk_chiview_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiView', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiView')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiView'), $arguments);
          }
          else {
            $this->setValue('fk_chiview_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiController
      if ($name == 'getChiControllerOID')
      {
        $fkValue = $this->getValue('fk_chicontroller_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiController', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiController')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiController'), $arguments);
          }
          else {
            $this->setValue('fk_chicontroller_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiNode
      if ($name == 'getChiNodeOID')
      {
        $fkValue = $this->getValue('fk_chinode_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiNode', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiNode')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiNode'), $arguments);
          }
          else {
            $this->setValue('fk_chinode_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiNodeManyToMany
      if ($name == 'getChiNodeManyToManyOID')
      {
        $fkValue = $this->getValue('fk_chinodemanytomany_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiNodeManyToMany', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiNodeManyToMany')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiNodeManyToMany'), $arguments);
          }
          else {
            $this->setValue('fk_chinodemanytomany_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Operation
      if ($name == 'getOperationOID')
      {
        $fkValue = $this->getValue('fk_operation_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Operation', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setOperation')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setOperation'), $arguments);
          }
          else {
            $this->setValue('fk_operation_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiIssue
      if ($name == 'getChiIssueOID')
      {
        $fkValue = $this->getValue('fk_chiissue_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiIssue', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiIssue')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiIssue'), $arguments);
          }
          else {
            $this->setValue('fk_chiissue_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiFeature
      if ($name == 'getChiFeatureOID')
      {
        $fkValue = $this->getValue('fk_chifeature_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiFeature', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiFeature')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiFeature'), $arguments);
          }
          else {
            $this->setValue('fk_chifeature_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiRequirement
      if ($name == 'getChiRequirementOID')
      {
        $fkValue = $this->getValue('fk_chirequirement_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiRequirement', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiRequirement')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiRequirement'), $arguments);
          }
          else {
            $this->setValue('fk_chirequirement_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiGoal
      if ($name == 'getChiGoalOID')
      {
        $fkValue = $this->getValue('fk_chigoal_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiGoal', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiGoal')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiGoal'), $arguments);
          }
          else {
            $this->setValue('fk_chigoal_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessUseCase
      if ($name == 'getChiBusinessUseCaseOID')
      {
        $fkValue = $this->getValue('fk_chibusinessusecase_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessUseCase', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessUseCase')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessUseCase'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinessusecase_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessUseCaseCore
      if ($name == 'getChiBusinessUseCaseCoreOID')
      {
        $fkValue = $this->getValue('fk_chibusinessusecasecore_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessUseCaseCore', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessUseCaseCore')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessUseCaseCore'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinessusecasecore_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessProcess
      if ($name == 'getChiBusinessProcessOID')
      {
        $fkValue = $this->getValue('fk_chibusinessprocess_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessProcess', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessProcess')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessProcess'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinessprocess_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Actor
      if ($name == 'getActorOID')
      {
        $fkValue = $this->getValue('fk_actor_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Actor', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActor')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActor'), $arguments);
          }
          else {
            $this->setValue('fk_actor_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessPartner
      if ($name == 'getChiBusinessPartnerOID')
      {
        $fkValue = $this->getValue('fk_chibusinesspartner_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessPartner', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessPartner')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessPartner'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinesspartner_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessPartnerPassive
      if ($name == 'getChiBusinessPartnerPassiveOID')
      {
        $fkValue = $this->getValue('fk_chibusinesspartnerpassive_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessPartnerPassive', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessPartnerPassive')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessPartnerPassive'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinesspartnerpassive_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiBusinessPartnerActive
      if ($name == 'getChiBusinessPartnerActiveOID')
      {
        $fkValue = $this->getValue('fk_chibusinesspartneractive_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiBusinessPartnerActive', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiBusinessPartnerActive')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiBusinessPartnerActive'), $arguments);
          }
          else {
            $this->setValue('fk_chibusinesspartneractive_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiWorker
      if ($name == 'getChiWorkerOID')
      {
        $fkValue = $this->getValue('fk_chiworker_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiWorker', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiWorker')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiWorker'), $arguments);
          }
          else {
            $this->setValue('fk_chiworker_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiWorkerInternal
      if ($name == 'getChiWorkerInternalOID')
      {
        $fkValue = $this->getValue('fk_chiworkerinternal_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiWorkerInternal', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiWorkerInternal')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiWorkerInternal'), $arguments);
          }
          else {
            $this->setValue('fk_chiworkerinternal_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiWorkerExternal
      if ($name == 'getChiWorkerExternalOID')
      {
        $fkValue = $this->getValue('fk_chiworkerexternal_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiWorkerExternal', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiWorkerExternal')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiWorkerExternal'), $arguments);
          }
          else {
            $this->setValue('fk_chiworkerexternal_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: RuleVariable
      if ($name == 'getRuleVariableOID')
      {
        $fkValue = $this->getValue('fk_rulevariable_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'RuleVariable', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setRuleVariable')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setRuleVariable'), $arguments);
          }
          else {
            $this->setValue('fk_rulevariable_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: RuleSetVariable
      if ($name == 'getRuleSetVariableOID')
      {
        $fkValue = $this->getValue('fk_rulesetvariable_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'RuleSetVariable', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setRuleSetVariable')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setRuleSetVariable'), $arguments);
          }
          else {
            $this->setValue('fk_rulesetvariable_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: RuleCondition
      if ($name == 'getRuleConditionOID')
      {
        $fkValue = $this->getValue('fk_rulecondition_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'RuleCondition', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setRuleCondition')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setRuleCondition'), $arguments);
          }
          else {
            $this->setValue('fk_rulecondition_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: RuleAction
      if ($name == 'getRuleActionOID')
      {
        $fkValue = $this->getValue('fk_ruleaction_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'RuleAction', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setRuleAction')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setRuleAction'), $arguments);
          }
          else {
            $this->setValue('fk_ruleaction_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ProductionRuleSet
      if ($name == 'getProductionRuleSetOID')
      {
        $fkValue = $this->getValue('fk_productionruleset_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ProductionRuleSet', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setProductionRuleSet')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setProductionRuleSet'), $arguments);
          }
          else {
            $this->setValue('fk_productionruleset_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ProductionRule
      if ($name == 'getProductionRuleOID')
      {
        $fkValue = $this->getValue('fk_productionrule_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ProductionRule', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setProductionRule')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setProductionRule'), $arguments);
          }
          else {
            $this->setValue('fk_productionrule_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiSystem
      if ($name == 'getChiSystemOID')
      {
        $fkValue = $this->getValue('fk_chisystem_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiSystem', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiSystem')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiSystem'), $arguments);
          }
          else {
            $this->setValue('fk_chisystem_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ActivityFinal
      if ($name == 'getActivityFinalOID')
      {
        $fkValue = $this->getValue('fk_activityfinal_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivityFinal', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivityFinal')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivityFinal'), $arguments);
          }
          else {
            $this->setValue('fk_activityfinal_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ActivityInitial
      if ($name == 'getActivityInitialOID')
      {
        $fkValue = $this->getValue('fk_activityinitial_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivityInitial', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivityInitial')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivityInitial'), $arguments);
          }
          else {
            $this->setValue('fk_activityinitial_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ActivitySend
      if ($name == 'getActivitySendOID')
      {
        $fkValue = $this->getValue('fk_activitysend_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivitySend', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivitySend')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivitySend'), $arguments);
          }
          else {
            $this->setValue('fk_activitysend_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ActivityReceive
      if ($name == 'getActivityReceiveOID')
      {
        $fkValue = $this->getValue('fk_activityreceive_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivityReceive', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivityReceive')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivityReceive'), $arguments);
          }
          else {
            $this->setValue('fk_activityreceive_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ActivityDecision
      if ($name == 'getActivityDecisionOID')
      {
        $fkValue = $this->getValue('fk_activitydecision_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ActivityDecision', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivityDecision')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivityDecision'), $arguments);
          }
          else {
            $this->setValue('fk_activitydecision_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: Activity
      if ($name == 'getActivityOID')
      {
        $fkValue = $this->getValue('fk_activity_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'Activity', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setActivity')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setActivity'), $arguments);
          }
          else {
            $this->setValue('fk_activity_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // foreign key: ChiObject
      if ($name == 'getChiObjectOID')
      {
        $fkValue = $this->getValue('fk_chiobject_id', DATATYPE_IGNORE);
        if ($fkValue != null) {
          return PersistenceFacade::composeOID(array('type' => 'ChiObject', 'id' => array($fkValue)));
        }
        else {
          return null;
        }
      }
      if ($name == 'setChiObject')
      {
        $node = &$arguments[0];
        if ($node != null)
        {
          if (!is_a($node, 'node') && !is_a($node, 'Node')) {
            call_user_func_array(array(parent, 'setChiObject'), $arguments);
          }
          else {
            $this->setValue('fk_chiobject_id', $node->getDBID(), DATATYPE_IGNORE);
          }
        }
        return;
      }
      // parent: ActivitySet
      if ($name == 'getActivitySetParents') {
        return $this->getParentsEx(null, 'ActivitySet', null, null);
      }
      // parent: ChiBase
      if ($name == 'getChiBaseParents') {
        return $this->getParentsEx(null, 'ChiBase', null, null);
      }
      // parent: Diagram
      if ($name == 'getDiagramParents') {
        return $this->getParentsEx(null, 'Diagram', null, null);
      }
      // parent: Glossary
      if ($name == 'getGlossaryParents') {
        return $this->getParentsEx(null, 'Glossary', null, null);
      }
      // parent: Property
      if ($name == 'getPropertyParents') {
        return $this->getParentsEx(null, 'Property', null, null);
      }
      // parent: ChiValue
      if ($name == 'getChiValueParents') {
        return $this->getParentsEx(null, 'ChiValue', null, null);
      }
      // parent: Feature
      if ($name == 'getFeatureParents') {
        return $this->getParentsEx(null, 'Feature', null, null);
      }
      // parent: ChiClass
      if ($name == 'getChiClassParents') {
        return $this->getParentsEx(null, 'ChiClass', null, null);
      }
      // parent: ChiView
      if ($name == 'getChiViewParents') {
        return $this->getParentsEx(null, 'ChiView', null, null);
      }
      // parent: ChiController
      if ($name == 'getChiControllerParents') {
        return $this->getParentsEx(null, 'ChiController', null, null);
      }
      // parent: ChiNode
      if ($name == 'getChiNodeParents') {
        return $this->getParentsEx(null, 'ChiNode', null, null);
      }
      // parent: ChiNodeManyToMany
      if ($name == 'getChiNodeManyToManyParents') {
        return $this->getParentsEx(null, 'ChiNodeManyToMany', null, null);
      }
      // parent: Operation
      if ($name == 'getOperationParents') {
        return $this->getParentsEx(null, 'Operation', null, null);
      }
      // parent: ChiIssue
      if ($name == 'getChiIssueParents') {
        return $this->getParentsEx(null, 'ChiIssue', null, null);
      }
      // parent: ChiFeature
      if ($name == 'getChiFeatureParents') {
        return $this->getParentsEx(null, 'ChiFeature', null, null);
      }
      // parent: ChiRequirement
      if ($name == 'getChiRequirementParents') {
        return $this->getParentsEx(null, 'ChiRequirement', null, null);
      }
      // parent: ChiGoal
      if ($name == 'getChiGoalParents') {
        return $this->getParentsEx(null, 'ChiGoal', null, null);
      }
      // parent: ChiBusinessUseCase
      if ($name == 'getChiBusinessUseCaseParents') {
        return $this->getParentsEx(null, 'ChiBusinessUseCase', null, null);
      }
      // parent: ChiBusinessUseCaseCore
      if ($name == 'getChiBusinessUseCaseCoreParents') {
        return $this->getParentsEx(null, 'ChiBusinessUseCaseCore', null, null);
      }
      // parent: ChiBusinessProcess
      if ($name == 'getChiBusinessProcessParents') {
        return $this->getParentsEx(null, 'ChiBusinessProcess', null, null);
      }
      // parent: Actor
      if ($name == 'getActorParents') {
        return $this->getParentsEx(null, 'Actor', null, null);
      }
      // parent: ChiBusinessPartner
      if ($name == 'getChiBusinessPartnerParents') {
        return $this->getParentsEx(null, 'ChiBusinessPartner', null, null);
      }
      // parent: ChiBusinessPartnerPassive
      if ($name == 'getChiBusinessPartnerPassiveParents') {
        return $this->getParentsEx(null, 'ChiBusinessPartnerPassive', null, null);
      }
      // parent: ChiBusinessPartnerActive
      if ($name == 'getChiBusinessPartnerActiveParents') {
        return $this->getParentsEx(null, 'ChiBusinessPartnerActive', null, null);
      }
      // parent: ChiWorker
      if ($name == 'getChiWorkerParents') {
        return $this->getParentsEx(null, 'ChiWorker', null, null);
      }
      // parent: ChiWorkerInternal
      if ($name == 'getChiWorkerInternalParents') {
        return $this->getParentsEx(null, 'ChiWorkerInternal', null, null);
      }
      // parent: ChiWorkerExternal
      if ($name == 'getChiWorkerExternalParents') {
        return $this->getParentsEx(null, 'ChiWorkerExternal', null, null);
      }
      // parent: RuleVariable
      if ($name == 'getRuleVariableParents') {
        return $this->getParentsEx(null, 'RuleVariable', null, null);
      }
      // parent: RuleSetVariable
      if ($name == 'getRuleSetVariableParents') {
        return $this->getParentsEx(null, 'RuleSetVariable', null, null);
      }
      // parent: RuleCondition
      if ($name == 'getRuleConditionParents') {
        return $this->getParentsEx(null, 'RuleCondition', null, null);
      }
      // parent: RuleAction
      if ($name == 'getRuleActionParents') {
        return $this->getParentsEx(null, 'RuleAction', null, null);
      }
      // parent: ProductionRuleSet
      if ($name == 'getProductionRuleSetParents') {
        return $this->getParentsEx(null, 'ProductionRuleSet', null, null);
      }
      // parent: ProductionRule
      if ($name == 'getProductionRuleParents') {
        return $this->getParentsEx(null, 'ProductionRule', null, null);
      }
      // parent: ChiSystem
      if ($name == 'getChiSystemParents') {
        return $this->getParentsEx(null, 'ChiSystem', null, null);
      }
      // parent: ActivityFinal
      if ($name == 'getActivityFinalParents') {
        return $this->getParentsEx(null, 'ActivityFinal', null, null);
      }
      // parent: ActivityInitial
      if ($name == 'getActivityInitialParents') {
        return $this->getParentsEx(null, 'ActivityInitial', null, null);
      }
      // parent: ActivitySend
      if ($name == 'getActivitySendParents') {
        return $this->getParentsEx(null, 'ActivitySend', null, null);
      }
      // parent: ActivityReceive
      if ($name == 'getActivityReceiveParents') {
        return $this->getParentsEx(null, 'ActivityReceive', null, null);
      }
      // parent: ActivityDecision
      if ($name == 'getActivityDecisionParents') {
        return $this->getParentsEx(null, 'ActivityDecision', null, null);
      }
      // parent: Activity
      if ($name == 'getActivityParents') {
        return $this->getParentsEx(null, 'Activity', null, null);
      }
      // parent: ChiObject
      if ($name == 'getChiObjectParents') {
        return $this->getParentsEx(null, 'ChiObject', null, null);
      }
    }

    /**
     * Node class overrides
     */
     
    /**
     * @see Node::loadChildren()
     * Override this to also load the children of many-to-many relations
     */
    function loadChildren($type, $buildDepth=BUILDDEPTH_SINGLE, $forceUpdate=false)
    {
      // do default
      parent::loadChildren($type, $buildDepth, $forceUpdate);
    }
    /**
     * @see Node::getChildrenEx()
     * Override this to also get the children of many-to-many relations
     */
    function getChildrenEx($oid, $type, $values, $properties, $useRegExp=true)
    {
      // do default
      return parent::getChildrenEx($oid, $type, $values, $properties, $useRegExp);
    }
    /**
     * @see Node::addChild()
     * Override this to insert association objects if necessary
     */
    function addChild(&$child, $addtype=ADDCHILD_BACK)
    {
      // do default
      parent::addChild($child, $addtype);
    }
    /**
     * @see Node::deleteChild()
     * Override this to delete association objects if necessary
     */
    function deleteChild($childOID, $reallyDelete=false)
    {
      // do default
      parent::deleteChild($childOID, $reallyDelete);
    }
}
?>
